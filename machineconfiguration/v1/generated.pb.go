// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/openshift/api/machineconfiguration/v1/generated.proto

package v1

import (
	fmt "fmt"

	io "io"

	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_sortkeys "github.com/gogo/protobuf/sortkeys"
	github_com_openshift_api_config_v1 "github.com/openshift/api/config/v1"
	k8s_io_api_core_v1 "k8s.io/api/core/v1"
	v11 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"

	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"

	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func (m *AWSPlatformSpec) Reset()      { *m = AWSPlatformSpec{} }
func (*AWSPlatformSpec) ProtoMessage() {}
func (*AWSPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{0}
}
func (m *AWSPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AWSPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AWSPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSPlatformSpec.Merge(m, src)
}
func (m *AWSPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *AWSPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AWSPlatformSpec proto.InternalMessageInfo

func (m *AWSPlatformStatus) Reset()      { *m = AWSPlatformStatus{} }
func (*AWSPlatformStatus) ProtoMessage() {}
func (*AWSPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{1}
}
func (m *AWSPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AWSPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AWSPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSPlatformStatus.Merge(m, src)
}
func (m *AWSPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *AWSPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AWSPlatformStatus proto.InternalMessageInfo

func (m *AWSResourceTag) Reset()      { *m = AWSResourceTag{} }
func (*AWSResourceTag) ProtoMessage() {}
func (*AWSResourceTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{2}
}
func (m *AWSResourceTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AWSResourceTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AWSResourceTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSResourceTag.Merge(m, src)
}
func (m *AWSResourceTag) XXX_Size() int {
	return m.Size()
}
func (m *AWSResourceTag) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSResourceTag.DiscardUnknown(m)
}

var xxx_messageInfo_AWSResourceTag proto.InternalMessageInfo

func (m *AWSServiceEndpoint) Reset()      { *m = AWSServiceEndpoint{} }
func (*AWSServiceEndpoint) ProtoMessage() {}
func (*AWSServiceEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{3}
}
func (m *AWSServiceEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AWSServiceEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AWSServiceEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSServiceEndpoint.Merge(m, src)
}
func (m *AWSServiceEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *AWSServiceEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSServiceEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_AWSServiceEndpoint proto.InternalMessageInfo

func (m *AlibabaCloudPlatformSpec) Reset()      { *m = AlibabaCloudPlatformSpec{} }
func (*AlibabaCloudPlatformSpec) ProtoMessage() {}
func (*AlibabaCloudPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{4}
}
func (m *AlibabaCloudPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlibabaCloudPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AlibabaCloudPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlibabaCloudPlatformSpec.Merge(m, src)
}
func (m *AlibabaCloudPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *AlibabaCloudPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AlibabaCloudPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AlibabaCloudPlatformSpec proto.InternalMessageInfo

func (m *AlibabaCloudPlatformStatus) Reset()      { *m = AlibabaCloudPlatformStatus{} }
func (*AlibabaCloudPlatformStatus) ProtoMessage() {}
func (*AlibabaCloudPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{5}
}
func (m *AlibabaCloudPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlibabaCloudPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AlibabaCloudPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlibabaCloudPlatformStatus.Merge(m, src)
}
func (m *AlibabaCloudPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *AlibabaCloudPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AlibabaCloudPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AlibabaCloudPlatformStatus proto.InternalMessageInfo

func (m *AlibabaCloudResourceTag) Reset()      { *m = AlibabaCloudResourceTag{} }
func (*AlibabaCloudResourceTag) ProtoMessage() {}
func (*AlibabaCloudResourceTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{6}
}
func (m *AlibabaCloudResourceTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AlibabaCloudResourceTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AlibabaCloudResourceTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlibabaCloudResourceTag.Merge(m, src)
}
func (m *AlibabaCloudResourceTag) XXX_Size() int {
	return m.Size()
}
func (m *AlibabaCloudResourceTag) XXX_DiscardUnknown() {
	xxx_messageInfo_AlibabaCloudResourceTag.DiscardUnknown(m)
}

var xxx_messageInfo_AlibabaCloudResourceTag proto.InternalMessageInfo

func (m *AzurePlatformSpec) Reset()      { *m = AzurePlatformSpec{} }
func (*AzurePlatformSpec) ProtoMessage() {}
func (*AzurePlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{7}
}
func (m *AzurePlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AzurePlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AzurePlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzurePlatformSpec.Merge(m, src)
}
func (m *AzurePlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *AzurePlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_AzurePlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_AzurePlatformSpec proto.InternalMessageInfo

func (m *AzurePlatformStatus) Reset()      { *m = AzurePlatformStatus{} }
func (*AzurePlatformStatus) ProtoMessage() {}
func (*AzurePlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{8}
}
func (m *AzurePlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AzurePlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *AzurePlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AzurePlatformStatus.Merge(m, src)
}
func (m *AzurePlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *AzurePlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_AzurePlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_AzurePlatformStatus proto.InternalMessageInfo

func (m *BareMetalPlatformSpec) Reset()      { *m = BareMetalPlatformSpec{} }
func (*BareMetalPlatformSpec) ProtoMessage() {}
func (*BareMetalPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{9}
}
func (m *BareMetalPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BareMetalPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BareMetalPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BareMetalPlatformSpec.Merge(m, src)
}
func (m *BareMetalPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *BareMetalPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_BareMetalPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_BareMetalPlatformSpec proto.InternalMessageInfo

func (m *BareMetalPlatformStatus) Reset()      { *m = BareMetalPlatformStatus{} }
func (*BareMetalPlatformStatus) ProtoMessage() {}
func (*BareMetalPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{10}
}
func (m *BareMetalPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BareMetalPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BareMetalPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BareMetalPlatformStatus.Merge(m, src)
}
func (m *BareMetalPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *BareMetalPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BareMetalPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BareMetalPlatformStatus proto.InternalMessageInfo

func (m *ConfigMapFileReference) Reset()      { *m = ConfigMapFileReference{} }
func (*ConfigMapFileReference) ProtoMessage() {}
func (*ConfigMapFileReference) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{11}
}
func (m *ConfigMapFileReference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ConfigMapFileReference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ConfigMapFileReference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMapFileReference.Merge(m, src)
}
func (m *ConfigMapFileReference) XXX_Size() int {
	return m.Size()
}
func (m *ConfigMapFileReference) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMapFileReference.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMapFileReference proto.InternalMessageInfo

func (m *CustomTLSProfile) Reset()      { *m = CustomTLSProfile{} }
func (*CustomTLSProfile) ProtoMessage() {}
func (*CustomTLSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{12}
}
func (m *CustomTLSProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CustomTLSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *CustomTLSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomTLSProfile.Merge(m, src)
}
func (m *CustomTLSProfile) XXX_Size() int {
	return m.Size()
}
func (m *CustomTLSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomTLSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_CustomTLSProfile proto.InternalMessageInfo

func (m *DNS) Reset()      { *m = DNS{} }
func (*DNS) ProtoMessage() {}
func (*DNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{13}
}
func (m *DNS) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNS.Merge(m, src)
}
func (m *DNS) XXX_Size() int {
	return m.Size()
}
func (m *DNS) XXX_DiscardUnknown() {
	xxx_messageInfo_DNS.DiscardUnknown(m)
}

var xxx_messageInfo_DNS proto.InternalMessageInfo

func (m *DNSSpec) Reset()      { *m = DNSSpec{} }
func (*DNSSpec) ProtoMessage() {}
func (*DNSSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{14}
}
func (m *DNSSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DNSSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DNSSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSSpec.Merge(m, src)
}
func (m *DNSSpec) XXX_Size() int {
	return m.Size()
}
func (m *DNSSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSSpec.DiscardUnknown(m)
}

var xxx_messageInfo_DNSSpec proto.InternalMessageInfo

func (m *DNSStatus) Reset()      { *m = DNSStatus{} }
func (*DNSStatus) ProtoMessage() {}
func (*DNSStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{15}
}
func (m *DNSStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DNSStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DNSStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSStatus.Merge(m, src)
}
func (m *DNSStatus) XXX_Size() int {
	return m.Size()
}
func (m *DNSStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSStatus.DiscardUnknown(m)
}

var xxx_messageInfo_DNSStatus proto.InternalMessageInfo

func (m *DNSZone) Reset()      { *m = DNSZone{} }
func (*DNSZone) ProtoMessage() {}
func (*DNSZone) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{16}
}
func (m *DNSZone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DNSZone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *DNSZone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSZone.Merge(m, src)
}
func (m *DNSZone) XXX_Size() int {
	return m.Size()
}
func (m *DNSZone) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSZone.DiscardUnknown(m)
}

var xxx_messageInfo_DNSZone proto.InternalMessageInfo

func (m *EquinixMetalPlatformSpec) Reset()      { *m = EquinixMetalPlatformSpec{} }
func (*EquinixMetalPlatformSpec) ProtoMessage() {}
func (*EquinixMetalPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{17}
}
func (m *EquinixMetalPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EquinixMetalPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EquinixMetalPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquinixMetalPlatformSpec.Merge(m, src)
}
func (m *EquinixMetalPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *EquinixMetalPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_EquinixMetalPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_EquinixMetalPlatformSpec proto.InternalMessageInfo

func (m *EquinixMetalPlatformStatus) Reset()      { *m = EquinixMetalPlatformStatus{} }
func (*EquinixMetalPlatformStatus) ProtoMessage() {}
func (*EquinixMetalPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{18}
}
func (m *EquinixMetalPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EquinixMetalPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *EquinixMetalPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquinixMetalPlatformStatus.Merge(m, src)
}
func (m *EquinixMetalPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *EquinixMetalPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_EquinixMetalPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_EquinixMetalPlatformStatus proto.InternalMessageInfo

func (m *GCPPlatformSpec) Reset()      { *m = GCPPlatformSpec{} }
func (*GCPPlatformSpec) ProtoMessage() {}
func (*GCPPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{19}
}
func (m *GCPPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GCPPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GCPPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCPPlatformSpec.Merge(m, src)
}
func (m *GCPPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *GCPPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_GCPPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_GCPPlatformSpec proto.InternalMessageInfo

func (m *GCPPlatformStatus) Reset()      { *m = GCPPlatformStatus{} }
func (*GCPPlatformStatus) ProtoMessage() {}
func (*GCPPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{20}
}
func (m *GCPPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GCPPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *GCPPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GCPPlatformStatus.Merge(m, src)
}
func (m *GCPPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *GCPPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_GCPPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_GCPPlatformStatus proto.InternalMessageInfo

func (m *IBMCloudPlatformSpec) Reset()      { *m = IBMCloudPlatformSpec{} }
func (*IBMCloudPlatformSpec) ProtoMessage() {}
func (*IBMCloudPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{21}
}
func (m *IBMCloudPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IBMCloudPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *IBMCloudPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IBMCloudPlatformSpec.Merge(m, src)
}
func (m *IBMCloudPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *IBMCloudPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_IBMCloudPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_IBMCloudPlatformSpec proto.InternalMessageInfo

func (m *IBMCloudPlatformStatus) Reset()      { *m = IBMCloudPlatformStatus{} }
func (*IBMCloudPlatformStatus) ProtoMessage() {}
func (*IBMCloudPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{22}
}
func (m *IBMCloudPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IBMCloudPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *IBMCloudPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IBMCloudPlatformStatus.Merge(m, src)
}
func (m *IBMCloudPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *IBMCloudPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_IBMCloudPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_IBMCloudPlatformStatus proto.InternalMessageInfo

func (m *Infrastructure) Reset()      { *m = Infrastructure{} }
func (*Infrastructure) ProtoMessage() {}
func (*Infrastructure) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{23}
}
func (m *Infrastructure) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Infrastructure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *Infrastructure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Infrastructure.Merge(m, src)
}
func (m *Infrastructure) XXX_Size() int {
	return m.Size()
}
func (m *Infrastructure) XXX_DiscardUnknown() {
	xxx_messageInfo_Infrastructure.DiscardUnknown(m)
}

var xxx_messageInfo_Infrastructure proto.InternalMessageInfo

func (m *InfrastructureSpec) Reset()      { *m = InfrastructureSpec{} }
func (*InfrastructureSpec) ProtoMessage() {}
func (*InfrastructureSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{24}
}
func (m *InfrastructureSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InfrastructureSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *InfrastructureSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfrastructureSpec.Merge(m, src)
}
func (m *InfrastructureSpec) XXX_Size() int {
	return m.Size()
}
func (m *InfrastructureSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_InfrastructureSpec.DiscardUnknown(m)
}

var xxx_messageInfo_InfrastructureSpec proto.InternalMessageInfo

func (m *InfrastructureStatus) Reset()      { *m = InfrastructureStatus{} }
func (*InfrastructureStatus) ProtoMessage() {}
func (*InfrastructureStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{25}
}
func (m *InfrastructureStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InfrastructureStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *InfrastructureStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfrastructureStatus.Merge(m, src)
}
func (m *InfrastructureStatus) XXX_Size() int {
	return m.Size()
}
func (m *InfrastructureStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_InfrastructureStatus.DiscardUnknown(m)
}

var xxx_messageInfo_InfrastructureStatus proto.InternalMessageInfo

func (m *IntermediateTLSProfile) Reset()      { *m = IntermediateTLSProfile{} }
func (*IntermediateTLSProfile) ProtoMessage() {}
func (*IntermediateTLSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{26}
}
func (m *IntermediateTLSProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *IntermediateTLSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *IntermediateTLSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntermediateTLSProfile.Merge(m, src)
}
func (m *IntermediateTLSProfile) XXX_Size() int {
	return m.Size()
}
func (m *IntermediateTLSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_IntermediateTLSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_IntermediateTLSProfile proto.InternalMessageInfo

func (m *KubevirtPlatformSpec) Reset()      { *m = KubevirtPlatformSpec{} }
func (*KubevirtPlatformSpec) ProtoMessage() {}
func (*KubevirtPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{27}
}
func (m *KubevirtPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubevirtPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubevirtPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubevirtPlatformSpec.Merge(m, src)
}
func (m *KubevirtPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *KubevirtPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_KubevirtPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_KubevirtPlatformSpec proto.InternalMessageInfo

func (m *KubevirtPlatformStatus) Reset()      { *m = KubevirtPlatformStatus{} }
func (*KubevirtPlatformStatus) ProtoMessage() {}
func (*KubevirtPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{28}
}
func (m *KubevirtPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubevirtPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubevirtPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubevirtPlatformStatus.Merge(m, src)
}
func (m *KubevirtPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *KubevirtPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_KubevirtPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_KubevirtPlatformStatus proto.InternalMessageInfo

func (m *ModernTLSProfile) Reset()      { *m = ModernTLSProfile{} }
func (*ModernTLSProfile) ProtoMessage() {}
func (*ModernTLSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{29}
}
func (m *ModernTLSProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ModernTLSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ModernTLSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModernTLSProfile.Merge(m, src)
}
func (m *ModernTLSProfile) XXX_Size() int {
	return m.Size()
}
func (m *ModernTLSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_ModernTLSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_ModernTLSProfile proto.InternalMessageInfo

func (m *OldTLSProfile) Reset()      { *m = OldTLSProfile{} }
func (*OldTLSProfile) ProtoMessage() {}
func (*OldTLSProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{30}
}
func (m *OldTLSProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OldTLSProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OldTLSProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OldTLSProfile.Merge(m, src)
}
func (m *OldTLSProfile) XXX_Size() int {
	return m.Size()
}
func (m *OldTLSProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_OldTLSProfile.DiscardUnknown(m)
}

var xxx_messageInfo_OldTLSProfile proto.InternalMessageInfo

func (m *OpenStackPlatformSpec) Reset()      { *m = OpenStackPlatformSpec{} }
func (*OpenStackPlatformSpec) ProtoMessage() {}
func (*OpenStackPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{31}
}
func (m *OpenStackPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OpenStackPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OpenStackPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenStackPlatformSpec.Merge(m, src)
}
func (m *OpenStackPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *OpenStackPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenStackPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_OpenStackPlatformSpec proto.InternalMessageInfo

func (m *OpenStackPlatformStatus) Reset()      { *m = OpenStackPlatformStatus{} }
func (*OpenStackPlatformStatus) ProtoMessage() {}
func (*OpenStackPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{32}
}
func (m *OpenStackPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OpenStackPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OpenStackPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenStackPlatformStatus.Merge(m, src)
}
func (m *OpenStackPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *OpenStackPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenStackPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_OpenStackPlatformStatus proto.InternalMessageInfo

func (m *OvirtPlatformSpec) Reset()      { *m = OvirtPlatformSpec{} }
func (*OvirtPlatformSpec) ProtoMessage() {}
func (*OvirtPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{33}
}
func (m *OvirtPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OvirtPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OvirtPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OvirtPlatformSpec.Merge(m, src)
}
func (m *OvirtPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *OvirtPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_OvirtPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_OvirtPlatformSpec proto.InternalMessageInfo

func (m *OvirtPlatformStatus) Reset()      { *m = OvirtPlatformStatus{} }
func (*OvirtPlatformStatus) ProtoMessage() {}
func (*OvirtPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{34}
}
func (m *OvirtPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OvirtPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *OvirtPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OvirtPlatformStatus.Merge(m, src)
}
func (m *OvirtPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *OvirtPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_OvirtPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_OvirtPlatformStatus proto.InternalMessageInfo

func (m *PlatformSpec) Reset()      { *m = PlatformSpec{} }
func (*PlatformSpec) ProtoMessage() {}
func (*PlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{35}
}
func (m *PlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformSpec.Merge(m, src)
}
func (m *PlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *PlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformSpec proto.InternalMessageInfo

func (m *PlatformStatus) Reset()      { *m = PlatformStatus{} }
func (*PlatformStatus) ProtoMessage() {}
func (*PlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{36}
}
func (m *PlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlatformStatus.Merge(m, src)
}
func (m *PlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *PlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PlatformStatus proto.InternalMessageInfo

func (m *PowerVSPlatformSpec) Reset()      { *m = PowerVSPlatformSpec{} }
func (*PowerVSPlatformSpec) ProtoMessage() {}
func (*PowerVSPlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{37}
}
func (m *PowerVSPlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PowerVSPlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PowerVSPlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerVSPlatformSpec.Merge(m, src)
}
func (m *PowerVSPlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *PowerVSPlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerVSPlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PowerVSPlatformSpec proto.InternalMessageInfo

func (m *PowerVSPlatformStatus) Reset()      { *m = PowerVSPlatformStatus{} }
func (*PowerVSPlatformStatus) ProtoMessage() {}
func (*PowerVSPlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{38}
}
func (m *PowerVSPlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PowerVSPlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PowerVSPlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerVSPlatformStatus.Merge(m, src)
}
func (m *PowerVSPlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *PowerVSPlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerVSPlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_PowerVSPlatformStatus proto.InternalMessageInfo

func (m *PowerVSServiceEndpoint) Reset()      { *m = PowerVSServiceEndpoint{} }
func (*PowerVSServiceEndpoint) ProtoMessage() {}
func (*PowerVSServiceEndpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{39}
}
func (m *PowerVSServiceEndpoint) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PowerVSServiceEndpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *PowerVSServiceEndpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PowerVSServiceEndpoint.Merge(m, src)
}
func (m *PowerVSServiceEndpoint) XXX_Size() int {
	return m.Size()
}
func (m *PowerVSServiceEndpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_PowerVSServiceEndpoint.DiscardUnknown(m)
}

var xxx_messageInfo_PowerVSServiceEndpoint proto.InternalMessageInfo

func (m *ProxyStatus) Reset()      { *m = ProxyStatus{} }
func (*ProxyStatus) ProtoMessage() {}
func (*ProxyStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{40}
}
func (m *ProxyStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProxyStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ProxyStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyStatus.Merge(m, src)
}
func (m *ProxyStatus) XXX_Size() int {
	return m.Size()
}
func (m *ProxyStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyStatus proto.InternalMessageInfo

func (m *TLSProfileSpec) Reset()      { *m = TLSProfileSpec{} }
func (*TLSProfileSpec) ProtoMessage() {}
func (*TLSProfileSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{41}
}
func (m *TLSProfileSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLSProfileSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *TLSProfileSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSProfileSpec.Merge(m, src)
}
func (m *TLSProfileSpec) XXX_Size() int {
	return m.Size()
}
func (m *TLSProfileSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSProfileSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TLSProfileSpec proto.InternalMessageInfo

func (m *TLSSecurityProfile) Reset()      { *m = TLSSecurityProfile{} }
func (*TLSSecurityProfile) ProtoMessage() {}
func (*TLSSecurityProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{42}
}
func (m *TLSSecurityProfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TLSSecurityProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *TLSSecurityProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSSecurityProfile.Merge(m, src)
}
func (m *TLSSecurityProfile) XXX_Size() int {
	return m.Size()
}
func (m *TLSSecurityProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSSecurityProfile.DiscardUnknown(m)
}

var xxx_messageInfo_TLSSecurityProfile proto.InternalMessageInfo

func (m *VSpherePlatformSpec) Reset()      { *m = VSpherePlatformSpec{} }
func (*VSpherePlatformSpec) ProtoMessage() {}
func (*VSpherePlatformSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{43}
}
func (m *VSpherePlatformSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VSpherePlatformSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VSpherePlatformSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VSpherePlatformSpec.Merge(m, src)
}
func (m *VSpherePlatformSpec) XXX_Size() int {
	return m.Size()
}
func (m *VSpherePlatformSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VSpherePlatformSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VSpherePlatformSpec proto.InternalMessageInfo

func (m *VSpherePlatformStatus) Reset()      { *m = VSpherePlatformStatus{} }
func (*VSpherePlatformStatus) ProtoMessage() {}
func (*VSpherePlatformStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{44}
}
func (m *VSpherePlatformStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VSpherePlatformStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *VSpherePlatformStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VSpherePlatformStatus.Merge(m, src)
}
func (m *VSpherePlatformStatus) XXX_Size() int {
	return m.Size()
}
func (m *VSpherePlatformStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_VSpherePlatformStatus.DiscardUnknown(m)
}

var xxx_messageInfo_VSpherePlatformStatus proto.InternalMessageInfo

func (m *ContainerRuntimeConfig) Reset()      { *m = ContainerRuntimeConfig{} }
func (*ContainerRuntimeConfig) ProtoMessage() {}
func (*ContainerRuntimeConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{45}
}
func (m *ContainerRuntimeConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfig.Merge(m, src)
}
func (m *ContainerRuntimeConfig) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfig proto.InternalMessageInfo

func (m *ContainerRuntimeConfigCondition) Reset()      { *m = ContainerRuntimeConfigCondition{} }
func (*ContainerRuntimeConfigCondition) ProtoMessage() {}
func (*ContainerRuntimeConfigCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{46}
}
func (m *ContainerRuntimeConfigCondition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfigCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfigCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfigCondition.Merge(m, src)
}
func (m *ContainerRuntimeConfigCondition) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfigCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfigCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfigCondition proto.InternalMessageInfo

func (m *ContainerRuntimeConfigList) Reset()      { *m = ContainerRuntimeConfigList{} }
func (*ContainerRuntimeConfigList) ProtoMessage() {}
func (*ContainerRuntimeConfigList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{47}
}
func (m *ContainerRuntimeConfigList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfigList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfigList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfigList.Merge(m, src)
}
func (m *ContainerRuntimeConfigList) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfigList) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfigList.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfigList proto.InternalMessageInfo

func (m *ContainerRuntimeConfigSpec) Reset()      { *m = ContainerRuntimeConfigSpec{} }
func (*ContainerRuntimeConfigSpec) ProtoMessage() {}
func (*ContainerRuntimeConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{48}
}
func (m *ContainerRuntimeConfigSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfigSpec.Merge(m, src)
}
func (m *ContainerRuntimeConfigSpec) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfigSpec proto.InternalMessageInfo

func (m *ContainerRuntimeConfigStatus) Reset()      { *m = ContainerRuntimeConfigStatus{} }
func (*ContainerRuntimeConfigStatus) ProtoMessage() {}
func (*ContainerRuntimeConfigStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{49}
}
func (m *ContainerRuntimeConfigStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfigStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfigStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfigStatus.Merge(m, src)
}
func (m *ContainerRuntimeConfigStatus) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfigStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfigStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfigStatus proto.InternalMessageInfo

func (m *ContainerRuntimeConfiguration) Reset()      { *m = ContainerRuntimeConfiguration{} }
func (*ContainerRuntimeConfiguration) ProtoMessage() {}
func (*ContainerRuntimeConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{50}
}
func (m *ContainerRuntimeConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContainerRuntimeConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ContainerRuntimeConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRuntimeConfiguration.Merge(m, src)
}
func (m *ContainerRuntimeConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *ContainerRuntimeConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRuntimeConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRuntimeConfiguration proto.InternalMessageInfo

func (m *ControllerConfig) Reset()      { *m = ControllerConfig{} }
func (*ControllerConfig) ProtoMessage() {}
func (*ControllerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{51}
}
func (m *ControllerConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControllerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ControllerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfig.Merge(m, src)
}
func (m *ControllerConfig) XXX_Size() int {
	return m.Size()
}
func (m *ControllerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfig proto.InternalMessageInfo

func (m *ControllerConfigList) Reset()      { *m = ControllerConfigList{} }
func (*ControllerConfigList) ProtoMessage() {}
func (*ControllerConfigList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{52}
}
func (m *ControllerConfigList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControllerConfigList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ControllerConfigList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfigList.Merge(m, src)
}
func (m *ControllerConfigList) XXX_Size() int {
	return m.Size()
}
func (m *ControllerConfigList) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfigList.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfigList proto.InternalMessageInfo

func (m *ControllerConfigSpec) Reset()      { *m = ControllerConfigSpec{} }
func (*ControllerConfigSpec) ProtoMessage() {}
func (*ControllerConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{53}
}
func (m *ControllerConfigSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControllerConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ControllerConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfigSpec.Merge(m, src)
}
func (m *ControllerConfigSpec) XXX_Size() int {
	return m.Size()
}
func (m *ControllerConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfigSpec proto.InternalMessageInfo

func (m *ControllerConfigStatus) Reset()      { *m = ControllerConfigStatus{} }
func (*ControllerConfigStatus) ProtoMessage() {}
func (*ControllerConfigStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{54}
}
func (m *ControllerConfigStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControllerConfigStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ControllerConfigStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfigStatus.Merge(m, src)
}
func (m *ControllerConfigStatus) XXX_Size() int {
	return m.Size()
}
func (m *ControllerConfigStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfigStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfigStatus proto.InternalMessageInfo

func (m *ControllerConfigStatusCondition) Reset()      { *m = ControllerConfigStatusCondition{} }
func (*ControllerConfigStatusCondition) ProtoMessage() {}
func (*ControllerConfigStatusCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{55}
}
func (m *ControllerConfigStatusCondition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ControllerConfigStatusCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *ControllerConfigStatusCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerConfigStatusCondition.Merge(m, src)
}
func (m *ControllerConfigStatusCondition) XXX_Size() int {
	return m.Size()
}
func (m *ControllerConfigStatusCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerConfigStatusCondition.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerConfigStatusCondition proto.InternalMessageInfo

func (m *KubeletConfig) Reset()      { *m = KubeletConfig{} }
func (*KubeletConfig) ProtoMessage() {}
func (*KubeletConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{56}
}
func (m *KubeletConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubeletConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubeletConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeletConfig.Merge(m, src)
}
func (m *KubeletConfig) XXX_Size() int {
	return m.Size()
}
func (m *KubeletConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeletConfig.DiscardUnknown(m)
}

var xxx_messageInfo_KubeletConfig proto.InternalMessageInfo

func (m *KubeletConfigCondition) Reset()      { *m = KubeletConfigCondition{} }
func (*KubeletConfigCondition) ProtoMessage() {}
func (*KubeletConfigCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{57}
}
func (m *KubeletConfigCondition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubeletConfigCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubeletConfigCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeletConfigCondition.Merge(m, src)
}
func (m *KubeletConfigCondition) XXX_Size() int {
	return m.Size()
}
func (m *KubeletConfigCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeletConfigCondition.DiscardUnknown(m)
}

var xxx_messageInfo_KubeletConfigCondition proto.InternalMessageInfo

func (m *KubeletConfigList) Reset()      { *m = KubeletConfigList{} }
func (*KubeletConfigList) ProtoMessage() {}
func (*KubeletConfigList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{58}
}
func (m *KubeletConfigList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubeletConfigList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubeletConfigList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeletConfigList.Merge(m, src)
}
func (m *KubeletConfigList) XXX_Size() int {
	return m.Size()
}
func (m *KubeletConfigList) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeletConfigList.DiscardUnknown(m)
}

var xxx_messageInfo_KubeletConfigList proto.InternalMessageInfo

func (m *KubeletConfigSpec) Reset()      { *m = KubeletConfigSpec{} }
func (*KubeletConfigSpec) ProtoMessage() {}
func (*KubeletConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{59}
}
func (m *KubeletConfigSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubeletConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubeletConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeletConfigSpec.Merge(m, src)
}
func (m *KubeletConfigSpec) XXX_Size() int {
	return m.Size()
}
func (m *KubeletConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeletConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_KubeletConfigSpec proto.InternalMessageInfo

func (m *KubeletConfigStatus) Reset()      { *m = KubeletConfigStatus{} }
func (*KubeletConfigStatus) ProtoMessage() {}
func (*KubeletConfigStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{60}
}
func (m *KubeletConfigStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *KubeletConfigStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *KubeletConfigStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeletConfigStatus.Merge(m, src)
}
func (m *KubeletConfigStatus) XXX_Size() int {
	return m.Size()
}
func (m *KubeletConfigStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeletConfigStatus.DiscardUnknown(m)
}

var xxx_messageInfo_KubeletConfigStatus proto.InternalMessageInfo

func (m *MachineConfig) Reset()      { *m = MachineConfig{} }
func (*MachineConfig) ProtoMessage() {}
func (*MachineConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{61}
}
func (m *MachineConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfig.Merge(m, src)
}
func (m *MachineConfig) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfig proto.InternalMessageInfo

func (m *MachineConfigList) Reset()      { *m = MachineConfigList{} }
func (*MachineConfigList) ProtoMessage() {}
func (*MachineConfigList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{62}
}
func (m *MachineConfigList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigList.Merge(m, src)
}
func (m *MachineConfigList) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigList) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigList.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigList proto.InternalMessageInfo

func (m *MachineConfigPool) Reset()      { *m = MachineConfigPool{} }
func (*MachineConfigPool) ProtoMessage() {}
func (*MachineConfigPool) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{63}
}
func (m *MachineConfigPool) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPool.Merge(m, src)
}
func (m *MachineConfigPool) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPool) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPool.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPool proto.InternalMessageInfo

func (m *MachineConfigPoolCondition) Reset()      { *m = MachineConfigPoolCondition{} }
func (*MachineConfigPoolCondition) ProtoMessage() {}
func (*MachineConfigPoolCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{64}
}
func (m *MachineConfigPoolCondition) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPoolCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPoolCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPoolCondition.Merge(m, src)
}
func (m *MachineConfigPoolCondition) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPoolCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPoolCondition.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPoolCondition proto.InternalMessageInfo

func (m *MachineConfigPoolList) Reset()      { *m = MachineConfigPoolList{} }
func (*MachineConfigPoolList) ProtoMessage() {}
func (*MachineConfigPoolList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{65}
}
func (m *MachineConfigPoolList) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPoolList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPoolList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPoolList.Merge(m, src)
}
func (m *MachineConfigPoolList) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPoolList) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPoolList.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPoolList proto.InternalMessageInfo

func (m *MachineConfigPoolSpec) Reset()      { *m = MachineConfigPoolSpec{} }
func (*MachineConfigPoolSpec) ProtoMessage() {}
func (*MachineConfigPoolSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{66}
}
func (m *MachineConfigPoolSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPoolSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPoolSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPoolSpec.Merge(m, src)
}
func (m *MachineConfigPoolSpec) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPoolSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPoolSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPoolSpec proto.InternalMessageInfo

func (m *MachineConfigPoolStatus) Reset()      { *m = MachineConfigPoolStatus{} }
func (*MachineConfigPoolStatus) ProtoMessage() {}
func (*MachineConfigPoolStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{67}
}
func (m *MachineConfigPoolStatus) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPoolStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPoolStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPoolStatus.Merge(m, src)
}
func (m *MachineConfigPoolStatus) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPoolStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPoolStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPoolStatus proto.InternalMessageInfo

func (m *MachineConfigPoolStatusConfiguration) Reset()      { *m = MachineConfigPoolStatusConfiguration{} }
func (*MachineConfigPoolStatusConfiguration) ProtoMessage() {}
func (*MachineConfigPoolStatusConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{68}
}
func (m *MachineConfigPoolStatusConfiguration) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigPoolStatusConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigPoolStatusConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigPoolStatusConfiguration.Merge(m, src)
}
func (m *MachineConfigPoolStatusConfiguration) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigPoolStatusConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigPoolStatusConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigPoolStatusConfiguration proto.InternalMessageInfo

func (m *MachineConfigSpec) Reset()      { *m = MachineConfigSpec{} }
func (*MachineConfigSpec) ProtoMessage() {}
func (*MachineConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_e268d534b81a8f86, []int{69}
}
func (m *MachineConfigSpec) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MachineConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *MachineConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MachineConfigSpec.Merge(m, src)
}
func (m *MachineConfigSpec) XXX_Size() int {
	return m.Size()
}
func (m *MachineConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MachineConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MachineConfigSpec proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AWSPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.AWSPlatformSpec")
	proto.RegisterType((*AWSPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.AWSPlatformStatus")
	proto.RegisterType((*AWSResourceTag)(nil), "github.com.openshift.api.machineconfiguration.v1.AWSResourceTag")
	proto.RegisterType((*AWSServiceEndpoint)(nil), "github.com.openshift.api.machineconfiguration.v1.AWSServiceEndpoint")
	proto.RegisterType((*AlibabaCloudPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.AlibabaCloudPlatformSpec")
	proto.RegisterType((*AlibabaCloudPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.AlibabaCloudPlatformStatus")
	proto.RegisterType((*AlibabaCloudResourceTag)(nil), "github.com.openshift.api.machineconfiguration.v1.AlibabaCloudResourceTag")
	proto.RegisterType((*AzurePlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.AzurePlatformSpec")
	proto.RegisterType((*AzurePlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.AzurePlatformStatus")
	proto.RegisterType((*BareMetalPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.BareMetalPlatformSpec")
	proto.RegisterType((*BareMetalPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.BareMetalPlatformStatus")
	proto.RegisterType((*ConfigMapFileReference)(nil), "github.com.openshift.api.machineconfiguration.v1.ConfigMapFileReference")
	proto.RegisterType((*CustomTLSProfile)(nil), "github.com.openshift.api.machineconfiguration.v1.CustomTLSProfile")
	proto.RegisterType((*DNS)(nil), "github.com.openshift.api.machineconfiguration.v1.DNS")
	proto.RegisterType((*DNSSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.DNSSpec")
	proto.RegisterType((*DNSStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.DNSStatus")
	proto.RegisterType((*DNSZone)(nil), "github.com.openshift.api.machineconfiguration.v1.DNSZone")
	proto.RegisterMapType((map[string]string)(nil), "github.com.openshift.api.machineconfiguration.v1.DNSZone.TagsEntry")
	proto.RegisterType((*EquinixMetalPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.EquinixMetalPlatformSpec")
	proto.RegisterType((*EquinixMetalPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.EquinixMetalPlatformStatus")
	proto.RegisterType((*GCPPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.GCPPlatformSpec")
	proto.RegisterType((*GCPPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.GCPPlatformStatus")
	proto.RegisterType((*IBMCloudPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.IBMCloudPlatformSpec")
	proto.RegisterType((*IBMCloudPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.IBMCloudPlatformStatus")
	proto.RegisterType((*Infrastructure)(nil), "github.com.openshift.api.machineconfiguration.v1.Infrastructure")
	proto.RegisterType((*InfrastructureSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.InfrastructureSpec")
	proto.RegisterType((*InfrastructureStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.InfrastructureStatus")
	proto.RegisterType((*IntermediateTLSProfile)(nil), "github.com.openshift.api.machineconfiguration.v1.IntermediateTLSProfile")
	proto.RegisterType((*KubevirtPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.KubevirtPlatformSpec")
	proto.RegisterType((*KubevirtPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.KubevirtPlatformStatus")
	proto.RegisterType((*ModernTLSProfile)(nil), "github.com.openshift.api.machineconfiguration.v1.ModernTLSProfile")
	proto.RegisterType((*OldTLSProfile)(nil), "github.com.openshift.api.machineconfiguration.v1.OldTLSProfile")
	proto.RegisterType((*OpenStackPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.OpenStackPlatformSpec")
	proto.RegisterType((*OpenStackPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.OpenStackPlatformStatus")
	proto.RegisterType((*OvirtPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.OvirtPlatformSpec")
	proto.RegisterType((*OvirtPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.OvirtPlatformStatus")
	proto.RegisterType((*PlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.PlatformSpec")
	proto.RegisterType((*PlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.PlatformStatus")
	proto.RegisterType((*PowerVSPlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.PowerVSPlatformSpec")
	proto.RegisterType((*PowerVSPlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.PowerVSPlatformStatus")
	proto.RegisterType((*PowerVSServiceEndpoint)(nil), "github.com.openshift.api.machineconfiguration.v1.PowerVSServiceEndpoint")
	proto.RegisterType((*ProxyStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.ProxyStatus")
	proto.RegisterType((*TLSProfileSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.TLSProfileSpec")
	proto.RegisterType((*TLSSecurityProfile)(nil), "github.com.openshift.api.machineconfiguration.v1.TLSSecurityProfile")
	proto.RegisterType((*VSpherePlatformSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.VSpherePlatformSpec")
	proto.RegisterType((*VSpherePlatformStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.VSpherePlatformStatus")
	proto.RegisterType((*ContainerRuntimeConfig)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfig")
	proto.RegisterType((*ContainerRuntimeConfigCondition)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfigCondition")
	proto.RegisterType((*ContainerRuntimeConfigList)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfigList")
	proto.RegisterType((*ContainerRuntimeConfigSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfigSpec")
	proto.RegisterType((*ContainerRuntimeConfigStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfigStatus")
	proto.RegisterType((*ContainerRuntimeConfiguration)(nil), "github.com.openshift.api.machineconfiguration.v1.ContainerRuntimeConfiguration")
	proto.RegisterType((*ControllerConfig)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfig")
	proto.RegisterType((*ControllerConfigList)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfigList")
	proto.RegisterType((*ControllerConfigSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfigSpec")
	proto.RegisterMapType((map[string]string)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfigSpec.ImagesEntry")
	proto.RegisterType((*ControllerConfigStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfigStatus")
	proto.RegisterType((*ControllerConfigStatusCondition)(nil), "github.com.openshift.api.machineconfiguration.v1.ControllerConfigStatusCondition")
	proto.RegisterType((*KubeletConfig)(nil), "github.com.openshift.api.machineconfiguration.v1.KubeletConfig")
	proto.RegisterType((*KubeletConfigCondition)(nil), "github.com.openshift.api.machineconfiguration.v1.KubeletConfigCondition")
	proto.RegisterType((*KubeletConfigList)(nil), "github.com.openshift.api.machineconfiguration.v1.KubeletConfigList")
	proto.RegisterType((*KubeletConfigSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.KubeletConfigSpec")
	proto.RegisterType((*KubeletConfigStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.KubeletConfigStatus")
	proto.RegisterType((*MachineConfig)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfig")
	proto.RegisterType((*MachineConfigList)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigList")
	proto.RegisterType((*MachineConfigPool)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPool")
	proto.RegisterType((*MachineConfigPoolCondition)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPoolCondition")
	proto.RegisterType((*MachineConfigPoolList)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPoolList")
	proto.RegisterType((*MachineConfigPoolSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPoolSpec")
	proto.RegisterType((*MachineConfigPoolStatus)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPoolStatus")
	proto.RegisterType((*MachineConfigPoolStatusConfiguration)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigPoolStatusConfiguration")
	proto.RegisterType((*MachineConfigSpec)(nil), "github.com.openshift.api.machineconfiguration.v1.MachineConfigSpec")
}

func init() {
	proto.RegisterFile("github.com/openshift/api/machineconfiguration/v1/generated.proto", fileDescriptor_e268d534b81a8f86)
}

var fileDescriptor_e268d534b81a8f86 = []byte{
	// 4091 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0xdb, 0x8f, 0x24, 0xd7,
	0x59, 0x77, 0xf5, 0xdc, 0xbf, 0x9e, 0xeb, 0x99, 0x5b, 0x7b, 0x88, 0xa7, 0x57, 0xed, 0x80, 0x1c,
	0x20, 0x3d, 0xf6, 0x3a, 0x26, 0x6b, 0x50, 0x62, 0x4f, 0xf7, 0xcc, 0xce, 0xb6, 0x77, 0x2e, 0xed,
	0xd3, 0x33, 0x6b, 0xd9, 0x18, 0x43, 0x4d, 0xf7, 0x99, 0xde, 0x62, 0xaa, 0xab, 0x3a, 0x75, 0x69,
	0xef, 0xac, 0x22, 0xb0, 0x12, 0x78, 0x08, 0x02, 0x12, 0x09, 0x71, 0x79, 0x20, 0xbc, 0xf0, 0xc4,
	0x03, 0x3c, 0x20, 0x21, 0xfe, 0x81, 0x04, 0xac, 0x3c, 0x59, 0x02, 0x84, 0x25, 0xc4, 0x24, 0x9e,
	0x3c, 0x21, 0xf1, 0xc4, 0x0b, 0x62, 0x11, 0x12, 0x3a, 0x97, 0xaa, 0x3a, 0xa7, 0xaa, 0x7a, 0xb6,
	0x6f, 0x5e, 0xdb, 0x92, 0xdf, 0xa6, 0xcf, 0xf7, 0x7d, 0xbf, 0xef, 0x5c, 0x7f, 0xdf, 0x77, 0x2e,
	0x35, 0xf0, 0x6a, 0xd3, 0xf0, 0xee, 0xfb, 0xa7, 0xc5, 0xba, 0xdd, 0xda, 0xb2, 0xdb, 0xc4, 0x72,
	0xef, 0x1b, 0x67, 0xde, 0x96, 0xde, 0x36, 0xb6, 0x5a, 0x7a, 0xfd, 0xbe, 0x61, 0x91, 0xba, 0x6d,
	0x9d, 0x19, 0x4d, 0xdf, 0xd1, 0x3d, 0xc3, 0xb6, 0xb6, 0x3a, 0x2f, 0x6c, 0x35, 0x89, 0x45, 0x1c,
	0xdd, 0x23, 0x8d, 0x62, 0xdb, 0xb1, 0x3d, 0x1b, 0x3d, 0x1f, 0x21, 0x14, 0x43, 0x84, 0xa2, 0xde,
	0x36, 0x8a, 0x69, 0x08, 0xc5, 0xce, 0x0b, 0x1b, 0x5f, 0x96, 0x7c, 0x36, 0xed, 0xa6, 0xbd, 0xc5,
	0x80, 0x4e, 0xfd, 0x33, 0xf6, 0x8b, 0xfd, 0x60, 0x7f, 0x71, 0x07, 0x1b, 0x85, 0xf3, 0x5b, 0x6e,
	0xd1, 0xb0, 0x59, 0xa5, 0xea, 0xb6, 0x43, 0x52, 0x2a, 0xb1, 0xf1, 0x95, 0x48, 0x47, 0x78, 0x75,
	0x2e, 0xb6, 0xda, 0xe7, 0x4d, 0x66, 0xe4, 0x10, 0xd7, 0xf6, 0x9d, 0x3a, 0xe9, 0xcb, 0xca, 0xdd,
	0x6a, 0x11, 0x4f, 0x4f, 0xf3, 0xb5, 0xd5, 0xcd, 0xca, 0xf1, 0x2d, 0xcf, 0x68, 0x25, 0xdd, 0xfc,
	0xd2, 0xe3, 0x0c, 0xdc, 0xfa, 0x7d, 0xd2, 0xd2, 0x13, 0x76, 0x2f, 0x76, 0xb3, 0xf3, 0x3d, 0xc3,
	0xdc, 0x32, 0x2c, 0xcf, 0xf5, 0x9c, 0xb8, 0x51, 0xe1, 0x2f, 0x34, 0x58, 0xd8, 0x7e, 0xa3, 0x56,
	0x35, 0x75, 0xef, 0xcc, 0x76, 0x5a, 0xb5, 0x36, 0xa9, 0xa3, 0xdf, 0xd3, 0x60, 0xd1, 0x25, 0x4e,
	0xc7, 0xa8, 0x93, 0x5d, 0xab, 0xd1, 0xb6, 0xa9, 0x69, 0x4e, 0xbb, 0x31, 0xf6, 0x5c, 0xf6, 0xe6,
	0x4e, 0xb1, 0xdf, 0xe1, 0x2b, 0x6e, 0xbf, 0x51, 0xab, 0xa9, 0x60, 0xa5, 0xdc, 0xfb, 0x97, 0xf9,
	0xa7, 0xae, 0x2e, 0xf3, 0x8b, 0x31, 0x81, 0x8b, 0x13, 0x7e, 0x0b, 0x3f, 0xc8, 0xc0, 0x92, 0x5c,
	0x41, 0x4f, 0xf7, 0x7c, 0x17, 0xfd, 0x1c, 0x4c, 0x3a, 0xa4, 0x69, 0xd8, 0x56, 0x4e, 0xbb, 0xa1,
	0x3d, 0x37, 0x53, 0x9a, 0x17, 0x88, 0x93, 0x98, 0x95, 0x62, 0x21, 0x4d, 0x6f, 0x4a, 0xe6, 0x93,
	0x69, 0x0a, 0x7a, 0x08, 0xb3, 0xc1, 0xdc, 0x3a, 0xd6, 0x9b, 0x6e, 0x6e, 0x8c, 0xd5, 0xe3, 0xd5,
	0x81, 0xea, 0x81, 0x23, 0xa0, 0xd2, 0x8a, 0xa8, 0xc3, 0xac, 0x54, 0xe8, 0x62, 0xc5, 0x57, 0xe1,
	0x18, 0xe6, 0x55, 0x2b, 0xf4, 0x0c, 0x8c, 0x9d, 0x93, 0x0b, 0xd1, 0x7f, 0x59, 0x01, 0x31, 0x76,
	0x97, 0x5c, 0x60, 0x5a, 0x8e, 0x9e, 0x85, 0x89, 0x8e, 0x6e, 0xfa, 0x24, 0x97, 0x61, 0x0a, 0x73,
	0x42, 0x61, 0xe2, 0x1e, 0x2d, 0xc4, 0x5c, 0x56, 0x38, 0x01, 0x94, 0xec, 0x13, 0x74, 0x03, 0xc6,
	0x2d, 0xbd, 0x45, 0x04, 0xf4, 0xac, 0xb0, 0x1c, 0x3f, 0xd4, 0x5b, 0x04, 0x33, 0x09, 0xf5, 0xed,
	0x3b, 0xa6, 0x80, 0x0e, 0x7d, 0x9f, 0xe0, 0x7d, 0x4c, 0xcb, 0x0b, 0x1b, 0x90, 0xdb, 0x36, 0x8d,
	0x53, 0xfd, 0x54, 0x2f, 0x9b, 0xb6, 0xdf, 0x90, 0x27, 0x67, 0xe1, 0x0f, 0x32, 0xb0, 0x91, 0x2a,
	0xec, 0x6f, 0x62, 0x6c, 0xc3, 0x42, 0xd0, 0x3f, 0x7b, 0x8e, 0xed, 0xb7, 0x2b, 0x3b, 0xa2, 0x36,
	0xeb, 0xc2, 0x60, 0x01, 0xab, 0x62, 0x1c, 0xd7, 0x47, 0xdf, 0xd6, 0x52, 0xc7, 0xb3, 0x32, 0xc0,
	0x78, 0x4a, 0xed, 0xe9, 0x77, 0x60, 0x7f, 0x0d, 0xd6, 0xbb, 0x98, 0x8f, 0x64, 0x84, 0x97, 0x61,
	0x69, 0xfb, 0xa1, 0xef, 0x10, 0x65, 0x0c, 0x7e, 0x92, 0x81, 0x65, 0xb5, 0x94, 0x77, 0xfe, 0x1e,
	0x2c, 0x29, 0x9d, 0x74, 0x18, 0xcd, 0x82, 0xa7, 0x05, 0xfa, 0x12, 0x8e, 0x2b, 0xe0, 0xa4, 0x0d,
	0x7a, 0x1b, 0x72, 0x16, 0xf1, 0xde, 0xb5, 0x9d, 0xf3, 0x84, 0xba, 0xa8, 0xed, 0x0d, 0x81, 0x97,
	0x3b, 0xec, 0xa2, 0x87, 0xbb, 0x22, 0xa0, 0x73, 0x98, 0xa9, 0xd3, 0xbe, 0x62, 0x70, 0x63, 0x0c,
	0xee, 0x40, 0xc0, 0xcd, 0x94, 0x03, 0xc1, 0xa3, 0xcb, 0xfc, 0xad, 0xae, 0xc1, 0x8e, 0x8f, 0xe0,
	0x16, 0x1d, 0x3a, 0xda, 0x0d, 0xcc, 0x68, 0xd7, 0xea, 0x18, 0x8e, 0x6d, 0xb5, 0x88, 0xe5, 0xe1,
	0x08, 0x1f, 0xbd, 0x04, 0x59, 0xdd, 0x69, 0x05, 0x6b, 0x23, 0x37, 0xce, 0xdc, 0x2d, 0x0b, 0x77,
	0xd9, 0x6d, 0x7c, 0x10, 0x88, 0xb0, 0xac, 0x57, 0x58, 0x87, 0xd5, 0x92, 0xee, 0x90, 0x03, 0xe2,
	0xe9, 0xa6, 0xd2, 0xf7, 0x3f, 0xd2, 0x60, 0x3d, 0x29, 0xe1, 0xfd, 0x7f, 0x00, 0xcb, 0x7a, 0xdb,
	0xa0, 0xcb, 0x91, 0x38, 0x15, 0xcb, 0x23, 0x8e, 0xa5, 0x9b, 0x95, 0xaa, 0x18, 0x81, 0x9f, 0x11,
	0x3e, 0x97, 0xb7, 0xab, 0x95, 0xb8, 0x0a, 0x4e, 0xb3, 0x43, 0x5b, 0x30, 0x63, 0x58, 0x4d, 0x87,
	0xb8, 0x6e, 0xa5, 0x2a, 0xba, 0x7d, 0x29, 0xe8, 0xa7, 0x4a, 0x20, 0xc0, 0x91, 0x0e, 0x35, 0xb0,
	0xec, 0x06, 0xd9, 0x39, 0xac, 0x55, 0xaa, 0xa2, 0x63, 0x43, 0x83, 0xc3, 0x40, 0x80, 0x23, 0x9d,
	0xc2, 0x9b, 0xb0, 0x56, 0x66, 0x5d, 0x79, 0xa0, 0xb7, 0x6f, 0x1b, 0x26, 0xc1, 0xe4, 0x8c, 0x38,
	0xc4, 0xaa, 0x93, 0xde, 0x38, 0x84, 0xce, 0xee, 0x4c, 0xfa, 0xec, 0x2e, 0xfc, 0xb1, 0x06, 0x8b,
	0x65, 0xdf, 0xf5, 0xec, 0xd6, 0xf1, 0x7e, 0xad, 0xea, 0xd8, 0x67, 0x86, 0x49, 0xd0, 0x7b, 0x1a,
	0xcc, 0x7b, 0xe1, 0x4f, 0xda, 0x9f, 0xcc, 0xc1, 0x40, 0x24, 0x7c, 0xac, 0xe0, 0x94, 0xd6, 0x44,
	0x0d, 0xe6, 0xd5, 0x72, 0x1c, 0xf3, 0x57, 0xf8, 0xab, 0x0c, 0x8c, 0xed, 0x1c, 0xd6, 0xd0, 0x6f,
	0xc0, 0x34, 0xcd, 0x18, 0x1a, 0xba, 0xa7, 0x8b, 0x3a, 0x3c, 0x5f, 0xe4, 0x01, 0xbc, 0x28, 0x07,
	0xf0, 0x62, 0xfb, 0xbc, 0x49, 0x0b, 0xdc, 0x22, 0xd5, 0xa6, 0x7e, 0x8f, 0x4e, 0x7f, 0x93, 0xd4,
	0x3d, 0x3a, 0xfc, 0x25, 0x24, 0x7c, 0x42, 0x54, 0x86, 0x43, 0x54, 0xf4, 0xab, 0x30, 0xee, 0xd2,
	0x16, 0x66, 0x18, 0xfa, 0xcb, 0xfd, 0xb7, 0x70, 0xe7, 0xb0, 0xc6, 0x9a, 0x16, 0xf6, 0x3e, 0x6b,
	0x10, 0x03, 0x45, 0x75, 0x98, 0x74, 0xd9, 0xa4, 0x63, 0xe3, 0x9c, 0xbd, 0xf9, 0x2b, 0x83, 0xc1,
	0x33, 0x88, 0x88, 0xa4, 0xf9, 0x6f, 0x2c, 0xa0, 0x0b, 0x7f, 0x92, 0x81, 0x29, 0x51, 0x09, 0x74,
	0x13, 0xe0, 0x54, 0x77, 0xc9, 0x8e, 0xdd, 0xd2, 0x8d, 0x80, 0xdc, 0xc3, 0xf6, 0x97, 0x42, 0x09,
	0x96, 0xb4, 0x90, 0x01, 0xd0, 0xf6, 0x4f, 0x4d, 0xa3, 0xfe, 0x96, 0x6d, 0x91, 0xa1, 0xfa, 0x81,
	0x02, 0x94, 0xe6, 0xa9, 0xab, 0x6a, 0x08, 0x88, 0x25, 0x70, 0x64, 0x42, 0xb6, 0xed, 0x18, 0x1d,
	0xdd, 0x23, 0xcc, 0xd7, 0xd8, 0xb0, 0xbe, 0x16, 0x28, 0x3b, 0x54, 0x23, 0x44, 0x2c, 0xc3, 0x17,
	0xb2, 0x30, 0x13, 0xf6, 0x5e, 0xe1, 0x87, 0x1a, 0xeb, 0x25, 0x56, 0x8d, 0x0d, 0xc8, 0x18, 0x0d,
	0xd1, 0x3b, 0x20, 0x7a, 0x27, 0x53, 0xd9, 0xc1, 0x19, 0xa3, 0x81, 0x08, 0x8c, 0x7b, 0x34, 0x4c,
	0xf1, 0xf4, 0xa7, 0x3c, 0x70, 0xdd, 0x8a, 0x34, 0xee, 0xec, 0x5a, 0x9e, 0x73, 0x11, 0xcd, 0x0c,
	0x16, 0x98, 0x18, 0xfc, 0xc6, 0x57, 0x61, 0x26, 0x54, 0x40, 0x8b, 0x52, 0x08, 0xe2, 0x51, 0x67,
	0x45, 0x89, 0x3a, 0x22, 0xcc, 0xfc, 0x72, 0xe6, 0x96, 0x46, 0xa3, 0xfe, 0xee, 0x37, 0x7c, 0xc3,
	0x32, 0x1e, 0x24, 0x59, 0xef, 0xcf, 0x35, 0xd8, 0x48, 0x15, 0x7e, 0x2a, 0x88, 0xaf, 0xb0, 0x04,
	0x0b, 0x7b, 0xe5, 0xaa, 0x52, 0x63, 0x13, 0x96, 0xe4, 0x22, 0x5e, 0xcf, 0x2d, 0x98, 0x69, 0x3b,
	0x36, 0x5d, 0xab, 0x95, 0x1d, 0x51, 0xbb, 0x10, 0xb8, 0x1a, 0x08, 0x70, 0xa4, 0x23, 0xa5, 0x33,
	0x99, 0xeb, 0xd2, 0x99, 0xc2, 0x1a, 0xac, 0x54, 0x4a, 0x07, 0xc9, 0x6c, 0xe9, 0x07, 0x19, 0x58,
	0x4b, 0x08, 0x78, 0x5d, 0x7e, 0x11, 0xa6, 0x4d, 0xbb, 0xce, 0x06, 0x57, 0x54, 0x65, 0x51, 0x80,
	0x4f, 0xef, 0x8b, 0x72, 0x1c, 0x6a, 0xa4, 0x87, 0xf6, 0xcc, 0x00, 0xa1, 0xdd, 0x85, 0xd9, 0xb6,
	0x63, 0x77, 0x8c, 0x06, 0x71, 0x8e, 0x2f, 0xda, 0x41, 0xfc, 0x3d, 0x0a, 0x32, 0x9d, 0xaa, 0x24,
	0x7b, 0x74, 0x99, 0xff, 0x6a, 0x0f, 0x21, 0x38, 0x6c, 0x9f, 0x64, 0x8a, 0x15, 0x27, 0xe8, 0xeb,
	0x30, 0x5f, 0x37, 0xdc, 0x8a, 0xe5, 0x7a, 0xba, 0x55, 0x27, 0x65, 0x7c, 0x28, 0xe2, 0x70, 0x48,
	0xda, 0xe5, 0x4a, 0x4d, 0x92, 0xe2, 0x98, 0x76, 0xe1, 0x47, 0x19, 0x98, 0xaf, 0x58, 0x67, 0x8e,
	0xee, 0x7a, 0x8e, 0x5f, 0xf7, 0x7c, 0x87, 0x3c, 0x01, 0xfe, 0x3e, 0x53, 0xf8, 0x7b, 0x80, 0xed,
	0x8a, 0x5a, 0xe3, 0xae, 0x54, 0x6e, 0xc5, 0xa8, 0xfc, 0xf6, 0xd0, 0x9e, 0xae, 0x67, 0xf5, 0xef,
	0x66, 0x00, 0x25, 0xab, 0x86, 0x7e, 0x1b, 0xb2, 0x2c, 0x6b, 0xe2, 0x09, 0x81, 0xe8, 0xd3, 0x3b,
	0xfd, 0xd7, 0x25, 0x3d, 0xa1, 0x88, 0x52, 0xae, 0x72, 0xe4, 0x04, 0xcb, 0x1e, 0xd1, 0x03, 0x98,
	0x6d, 0x4b, 0x6b, 0x47, 0xf4, 0xfb, 0xd7, 0xfb, 0xaf, 0x81, 0xbc, 0x02, 0xa3, 0x1c, 0x5e, 0x2e,
	0xc5, 0x8a, 0xa7, 0xc2, 0xdf, 0x4c, 0xc2, 0x4a, 0x5a, 0x17, 0xa2, 0xd7, 0x00, 0x19, 0x4a, 0xb9,
	0x94, 0x51, 0x6f, 0x08, 0xe0, 0x58, 0x5f, 0xb2, 0x75, 0x97, 0x62, 0x85, 0x7e, 0x1d, 0xa6, 0x03,
	0xa7, 0x62, 0xe1, 0x96, 0x83, 0xf5, 0x1e, 0x54, 0xed, 0xd1, 0x65, 0x7e, 0xab, 0x87, 0x05, 0x17,
	0xa8, 0xb3, 0x85, 0x16, 0x82, 0xa2, 0x6f, 0xc2, 0x7c, 0x5b, 0xa1, 0x18, 0x31, 0x9f, 0x5e, 0x1d,
	0xa2, 0x07, 0xf9, 0x4c, 0x42, 0x74, 0x89, 0xaa, 0x65, 0x38, 0xe6, 0x8b, 0x86, 0x00, 0xe2, 0xd5,
	0x1b, 0x3b, 0x86, 0x5b, 0xb7, 0x3b, 0xc4, 0xb9, 0x10, 0x89, 0xc2, 0xb8, 0x1a, 0x02, 0x76, 0x93,
	0x2a, 0x38, 0xcd, 0x0e, 0xdd, 0x82, 0xd9, 0x30, 0x32, 0x9c, 0xe0, 0xfd, 0xdc, 0x04, 0xc3, 0x09,
	0x07, 0x33, 0x0c, 0x25, 0x74, 0xcf, 0xaa, 0x68, 0xa2, 0x2a, 0xac, 0x24, 0x62, 0xca, 0x09, 0xae,
	0xe4, 0x26, 0x19, 0xc2, 0x17, 0x04, 0xc2, 0x4a, 0x22, 0x18, 0x51, 0xa4, 0x54, 0x4b, 0xba, 0xd1,
	0x5c, 0xa9, 0xdb, 0x96, 0xe7, 0xd8, 0x34, 0xee, 0x59, 0xe4, 0xd8, 0x6e, 0xdb, 0xa6, 0xdd, 0xbc,
	0xc8, 0x4d, 0x29, 0xdc, 0xb9, 0x52, 0x4e, 0xd1, 0xe9, 0x71, 0x48, 0x03, 0xf5, 0x03, 0xbb, 0x41,
	0x70, 0xaa, 0x33, 0xf4, 0x1d, 0x0d, 0xd6, 0xd4, 0x69, 0x15, 0xd6, 0x63, 0x9a, 0xd5, 0xe3, 0x75,
	0x51, 0x8f, 0xb5, 0x4a, 0xaa, 0xd6, 0x20, 0x35, 0xe9, 0xe2, 0xb0, 0x90, 0x83, 0x35, 0xd6, 0x41,
	0x2d, 0xd2, 0x30, 0x74, 0x8f, 0x44, 0x29, 0x37, 0x0d, 0x84, 0x77, 0xfd, 0x53, 0xd2, 0x31, 0x1c,
	0x4f, 0x09, 0x84, 0x7f, 0xa6, 0xc1, 0x5a, 0x42, 0xf0, 0xe9, 0x48, 0x1e, 0x10, 0x2c, 0xd2, 0xc6,
	0x3a, 0x96, 0xd4, 0x8c, 0x05, 0x98, 0x3b, 0x32, 0x1b, 0x52, 0xc1, 0x3a, 0xac, 0x1e, 0xb5, 0x89,
	0x55, 0xf3, 0xf4, 0xfa, 0xb9, 0xd2, 0xb0, 0xff, 0xd5, 0x60, 0x3d, 0x29, 0xf9, 0xb8, 0x5a, 0x16,
	0xed, 0x9b, 0x63, 0x2d, 0x0b, 0xf7, 0xcd, 0xf2, 0xde, 0x57, 0xe9, 0x8a, 0xb1, 0x7e, 0x37, 0x90,
	0xe3, 0x3d, 0x6c, 0x20, 0x97, 0x61, 0xe9, 0x28, 0x31, 0xd6, 0xff, 0xa0, 0xc1, 0xf2, 0xd1, 0xa7,
	0x6f, 0xa0, 0xfb, 0xdf, 0x1e, 0x7f, 0x3f, 0x0b, 0x4a, 0xd8, 0x40, 0x35, 0x18, 0xf7, 0x68, 0xd2,
	0xc4, 0xab, 0xfc, 0x4a, 0x98, 0x7d, 0xf3, 0x64, 0xa9, 0x6f, 0xee, 0x66, 0x60, 0xe8, 0x6d, 0x18,
	0xd3, 0xdf, 0x75, 0x45, 0xb8, 0xdb, 0x1e, 0xe8, 0x34, 0x52, 0x89, 0x78, 0x53, 0x74, 0x1f, 0xbe,
	0xfd, 0x46, 0x0d, 0x53, 0x58, 0xd4, 0x80, 0x09, 0xfd, 0xa1, 0xef, 0x04, 0x5b, 0xa2, 0x01, 0xb6,
	0x1d, 0x89, 0xf3, 0xa7, 0xd2, 0xcc, 0xd5, 0x65, 0x7e, 0x82, 0x15, 0x63, 0x0e, 0x4e, 0xdb, 0xd0,
	0xac, 0xb7, 0xd9, 0x94, 0x19, 0xa8, 0x0d, 0xb1, 0xec, 0x9d, 0xb7, 0x61, 0xaf, 0x5c, 0xc5, 0x14,
	0x16, 0x79, 0x30, 0x73, 0xaa, 0x3b, 0x84, 0x66, 0x66, 0x26, 0x8b, 0x04, 0xd9, 0x9b, 0x7b, 0xfd,
	0xfb, 0x48, 0x3d, 0xcf, 0x29, 0xcd, 0xd1, 0xd1, 0x0f, 0x45, 0x38, 0x72, 0x44, 0xbd, 0x32, 0x60,
	0xba, 0xb0, 0x59, 0xf4, 0x18, 0xc8, 0x6b, 0x2a, 0x6b, 0x70, 0xaf, 0xa1, 0x08, 0x47, 0x8e, 0xe8,
	0x78, 0xd9, 0x74, 0xed, 0xb0, 0xe0, 0x32, 0xd0, 0x78, 0x25, 0x16, 0x24, 0x1f, 0x2f, 0x56, 0x8c,
	0x39, 0x38, 0x32, 0x61, 0xaa, 0xe3, 0xb6, 0xef, 0x13, 0x87, 0xb0, 0xe0, 0x91, 0xbd, 0xb9, 0xdb,
	0xbf, 0x9f, 0x7b, 0x35, 0x06, 0xa0, 0x78, 0xca, 0x5e, 0x5d, 0xe6, 0xa7, 0x84, 0x00, 0x07, 0x2e,
	0x50, 0x1b, 0xa6, 0x8d, 0xd3, 0x16, 0xe3, 0xa5, 0xdc, 0xcc, 0xc0, 0x39, 0x6e, 0xca, 0xfe, 0xaa,
	0x34, 0x4b, 0xd3, 0xa7, 0x40, 0x82, 0x43, 0x2f, 0xd4, 0xe3, 0xb9, 0x88, 0x36, 0x39, 0x18, 0xd4,
	0x63, 0x5a, 0x20, 0xe3, 0x1e, 0x03, 0x09, 0x0e, 0xbd, 0xa0, 0xf7, 0x34, 0x98, 0x25, 0xd2, 0x0e,
	0x39, 0x97, 0x65, 0x6e, 0x5f, 0xeb, 0xdf, 0x6d, 0xb7, 0x4d, 0x78, 0x69, 0x91, 0x66, 0x3e, 0xb2,
	0x14, 0x2b, 0x1e, 0xe9, 0xa0, 0xb6, 0xed, 0x77, 0x89, 0xd3, 0x71, 0x73, 0xb3, 0x83, 0x0e, 0x6a,
	0x95, 0x02, 0xdc, 0xab, 0x25, 0x07, 0x55, 0x08, 0x70, 0xe0, 0x82, 0x35, 0x58, 0x97, 0x4e, 0xbe,
	0x73, 0x73, 0x83, 0x36, 0xb8, 0xdb, 0x5d, 0x03, 0x6f, 0xb0, 0x72, 0xba, 0xae, 0x78, 0x2c, 0xfc,
	0x7d, 0x16, 0x62, 0x69, 0xe9, 0xc7, 0xc3, 0xd0, 0xef, 0xc8, 0x0c, 0x5d, 0x1e, 0x8e, 0xa1, 0x79,
	0x46, 0xad, 0x72, 0xf4, 0x99, 0xca, 0xd1, 0xbb, 0xc3, 0x72, 0x34, 0xf7, 0x91, 0x64, 0xe9, 0x77,
	0x64, 0x96, 0x2e, 0x0f, 0xc7, 0xd2, 0x52, 0x3b, 0x42, 0x9e, 0xee, 0x24, 0x79, 0xba, 0x32, 0x0a,
	0x9e, 0xe6, 0xbe, 0xba, 0x33, 0x75, 0x27, 0xc9, 0xd4, 0x95, 0x51, 0x30, 0xb5, 0xe4, 0x37, 0x95,
	0xab, 0xcf, 0x54, 0xae, 0xde, 0x1d, 0x96, 0xab, 0xa5, 0x71, 0x53, 0xd8, 0xda, 0x8a, 0xb3, 0xf5,
	0xde, 0xf0, 0x6c, 0xcd, 0x7d, 0xa5, 0xf3, 0xb5, 0x93, 0xe0, 0xeb, 0x3b, 0x23, 0xe0, 0x6b, 0xee,
	0xb1, 0x1b, 0x63, 0x3b, 0x09, 0xc6, 0xbe, 0x33, 0x02, 0xc6, 0x96, 0x7c, 0xa6, 0x70, 0xf6, 0xb7,
	0xd2, 0x39, 0x7b, 0x7f, 0x44, 0x9c, 0xcd, 0x9d, 0x3f, 0x8e, 0xb5, 0xad, 0x38, 0x6b, 0xef, 0x0d,
	0xcf, 0xda, 0xd2, 0xe0, 0x26, 0x78, 0xfb, 0x5b, 0xe9, 0xbc, 0xbd, 0x3f, 0x22, 0xde, 0x96, 0x1a,
	0x7d, 0x0d, 0x73, 0xaf, 0xc2, 0x72, 0x4a, 0xa4, 0x29, 0xfc, 0x6d, 0x06, 0x56, 0x53, 0xdb, 0xd2,
	0xf3, 0xbd, 0xf2, 0x0d, 0x18, 0x7f, 0x18, 0x5c, 0x36, 0x48, 0xf7, 0x56, 0xec, 0x08, 0x9f, 0x49,
	0xd0, 0x1f, 0xa6, 0x3d, 0x49, 0xe0, 0x57, 0xc7, 0x77, 0x06, 0xee, 0xf9, 0x61, 0x9e, 0x25, 0x0c,
	0x7b, 0x38, 0xfa, 0x26, 0xac, 0xa5, 0xd7, 0x62, 0xf8, 0x87, 0x00, 0xdf, 0xd7, 0x20, 0x5b, 0x75,
	0xec, 0x07, 0x17, 0xd1, 0xf9, 0xf9, 0x7d, 0xcf, 0x6b, 0xb3, 0xa2, 0xf8, 0xf9, 0xf9, 0x9d, 0xe3,
	0xe3, 0x2a, 0x13, 0xe0, 0x48, 0x07, 0xdd, 0x04, 0xa0, 0x3f, 0x5c, 0x6e, 0x91, 0x51, 0x6f, 0x8d,
	0xa8, 0x45, 0x8d, 0x9b, 0x48, 0x5a, 0xe8, 0x4b, 0x30, 0x65, 0xd9, 0xdc, 0x80, 0x6f, 0xd2, 0x16,
	0x84, 0xc1, 0xd4, 0x21, 0x2f, 0xc6, 0x81, 0xbc, 0xf0, 0xd7, 0x1a, 0xc4, 0xee, 0xfb, 0xd0, 0xcf,
	0xc2, 0x54, 0xdd, 0xa0, 0x34, 0xc6, 0x9f, 0xcc, 0xcc, 0xf0, 0x55, 0x50, 0xe6, 0x45, 0x38, 0x90,
	0x21, 0x0f, 0xe6, 0x5a, 0x06, 0xdd, 0xf1, 0xdf, 0x23, 0x8e, 0x1b, 0x9d, 0xef, 0x1f, 0x0a, 0x57,
	0x73, 0x07, 0xb2, 0xf0, 0xd1, 0x65, 0xfe, 0xa5, 0x5e, 0x8e, 0x4e, 0x58, 0x4d, 0x3c, 0xbb, 0x6e,
	0x9b, 0xc2, 0x10, 0xab, 0x4e, 0x0a, 0x7f, 0x3a, 0x0e, 0xe8, 0x78, 0xbf, 0x56, 0x23, 0x75, 0xdf,
	0x31, 0xbc, 0x8b, 0xe0, 0x5a, 0xf4, 0x44, 0x49, 0x5a, 0xb6, 0x63, 0x49, 0xcb, 0x0b, 0x3d, 0xbb,
	0xa6, 0x60, 0x52, 0xda, 0xf2, 0x16, 0x8c, 0xd9, 0x66, 0x43, 0xa4, 0x2d, 0xaf, 0x0c, 0x10, 0x9c,
	0xe4, 0x13, 0x10, 0x1e, 0xea, 0x8f, 0xcc, 0x06, 0xa6, 0xa0, 0xe8, 0xb7, 0x60, 0xd6, 0x90, 0x4e,
	0x80, 0x44, 0xe6, 0x32, 0x48, 0x98, 0x48, 0x3d, 0x47, 0xe2, 0x04, 0x22, 0xcb, 0xb0, 0xe2, 0x0f,
	0x9d, 0xc1, 0x64, 0x8b, 0x1d, 0xda, 0x88, 0x6c, 0xa6, 0xd4, 0xbf, 0xe7, 0xf8, 0xa1, 0x4f, 0x09,
	0x28, 0x9f, 0xf0, 0x52, 0x2c, 0xd0, 0xa9, 0x9f, 0x3a, 0xbb, 0xc5, 0x16, 0xf9, 0xcc, 0x00, 0x7e,
	0xe2, 0xb7, 0xe0, 0xdc, 0x0f, 0x2f, 0xc5, 0x02, 0x9d, 0x12, 0x62, 0xca, 0x7e, 0xaa, 0xf0, 0xbe,
	0x06, 0xab, 0xa9, 0x91, 0xfb, 0xb3, 0x77, 0x98, 0x72, 0x95, 0x61, 0x8f, 0x0d, 0x3c, 0xdd, 0xb0,
	0x88, 0x83, 0xf9, 0x53, 0x3a, 0x71, 0xf2, 0xff, 0xf1, 0xdf, 0xe5, 0x58, 0xca, 0x5d, 0xce, 0xfe,
	0x40, 0xb7, 0x1a, 0x29, 0x35, 0xef, 0x7a, 0xa7, 0xd3, 0x89, 0xdd, 0xe9, 0x1c, 0x8e, 0xcc, 0xe3,
	0xf5, 0x77, 0x3b, 0xdf, 0x19, 0x83, 0x7c, 0xba, 0x61, 0xd9, 0xb6, 0x1a, 0x06, 0xbb, 0x4a, 0x3c,
	0x50, 0xd8, 0xe6, 0xe5, 0x18, 0xdb, 0x7c, 0xe9, 0x3a, 0xbf, 0x21, 0x88, 0xc4, 0x32, 0xfb, 0x61,
	0x53, 0xf9, 0xb4, 0xf9, 0x8a, 0x5a, 0xb5, 0x47, 0x97, 0xf9, 0x94, 0x17, 0xa1, 0xc5, 0x10, 0x49,
	0x6d, 0x00, 0xea, 0x00, 0x32, 0x75, 0xd7, 0x3b, 0x76, 0x74, 0xcb, 0xe5, 0x9e, 0x8c, 0x56, 0xc0,
	0x2e, 0x3f, 0xdf, 0xdb, 0xa4, 0xa0, 0x16, 0xd1, 0xed, 0xcc, 0x7e, 0x02, 0x0d, 0xa7, 0x78, 0xe0,
	0xf9, 0x85, 0xee, 0xda, 0xc1, 0x8d, 0x85, 0x94, 0x5f, 0xd0, 0x52, 0x2c, 0xa4, 0x34, 0x38, 0xb5,
	0x88, 0xeb, 0xea, 0x4d, 0x22, 0xae, 0x24, 0xc2, 0xe0, 0x74, 0xc0, 0x8b, 0x71, 0x20, 0x2f, 0xfc,
	0x87, 0x06, 0x1b, 0xe9, 0x9d, 0xb9, 0x6f, 0xb8, 0x1e, 0x7a, 0x3b, 0x31, 0xe9, 0x8b, 0xbd, 0xb5,
	0x8f, 0x5a, 0xb3, 0x29, 0x1f, 0xdd, 0x17, 0x8b, 0x12, 0x69, 0xc2, 0xb7, 0x60, 0xc2, 0xf0, 0x48,
	0x2b, 0x78, 0x6d, 0x70, 0x67, 0x54, 0xf3, 0x2f, 0x7a, 0xa6, 0x56, 0xa1, 0xf0, 0x98, 0x7b, 0x29,
	0xfc, 0x4b, 0xa6, 0x5b, 0x5b, 0x59, 0x50, 0xfe, 0x9e, 0x06, 0x4f, 0x0b, 0x3f, 0xbc, 0xb4, 0x6a,
	0xdb, 0x66, 0x8d, 0x98, 0xa4, 0xee, 0xd9, 0x8e, 0x68, 0xfd, 0x8b, 0x3d, 0xb6, 0x5e, 0x3f, 0x25,
	0xa1, 0x69, 0xe9, 0x99, 0xab, 0xcb, 0xfc, 0xd3, 0x07, 0xdd, 0x90, 0x71, 0x77, 0xa7, 0xe8, 0x2f,
	0x35, 0x58, 0xab, 0xa7, 0xd6, 0x58, 0x90, 0xc4, 0xd1, 0xa8, 0xba, 0x4c, 0x28, 0x94, 0x36, 0xae,
	0x2e, 0xf3, 0x5d, 0x18, 0x10, 0x77, 0xa9, 0x4a, 0xe1, 0xbf, 0x34, 0xf8, 0xc2, 0x75, 0x0b, 0x12,
	0xbd, 0x06, 0xc8, 0x3e, 0xa5, 0x29, 0x25, 0x69, 0xec, 0xf1, 0xa7, 0xc5, 0x41, 0x8e, 0x3c, 0x16,
	0xad, 0x81, 0xa3, 0x84, 0x06, 0x4e, 0xb1, 0x42, 0xbf, 0xab, 0x01, 0xd4, 0x83, 0x75, 0x19, 0xcc,
	0x9c, 0xd7, 0x47, 0xd5, 0x0d, 0xe1, 0x8a, 0x8f, 0xa8, 0x3a, 0x2c, 0x72, 0xb1, 0xe4, 0xb8, 0xf0,
	0xc3, 0x0c, 0x3c, 0x73, 0x6d, 0x57, 0xa2, 0x5f, 0x80, 0x99, 0xb6, 0xd1, 0x70, 0xf7, 0x8d, 0x96,
	0xe1, 0x89, 0xc6, 0xb2, 0x5d, 0x7a, 0x35, 0x28, 0xc4, 0x91, 0x9c, 0x3f, 0xb4, 0x68, 0xee, 0x93,
	0x0e, 0x09, 0x12, 0x5d, 0xe9, 0xa1, 0x05, 0x2f, 0xc7, 0xa1, 0x06, 0x3a, 0x05, 0x30, 0xed, 0x66,
	0xcd, 0x78, 0x48, 0x0e, 0xf4, 0x07, 0x82, 0x78, 0xae, 0x5d, 0x98, 0xc5, 0xe0, 0x8d, 0x45, 0xf1,
	0x75, 0x5f, 0xb7, 0x3c, 0xc3, 0xbb, 0x88, 0x1a, 0xb8, 0x1f, 0x22, 0x61, 0x09, 0x15, 0x11, 0xc8,
	0xda, 0x1d, 0xe2, 0x98, 0xfa, 0x05, 0x2d, 0x11, 0x19, 0x4c, 0xbf, 0x4e, 0xc2, 0x0b, 0xf5, 0xa3,
	0x08, 0x0a, 0xcb, 0xb8, 0x85, 0x0f, 0x32, 0xb0, 0x28, 0xee, 0x24, 0x4d, 0xe2, 0x3c, 0xb1, 0x58,
	0x7b, 0x5f, 0x89, 0xb5, 0xb7, 0x07, 0x9b, 0x3f, 0x72, 0x9d, 0xbb, 0x46, 0xd9, 0x76, 0x2c, 0xca,
	0xde, 0x19, 0x81, 0xaf, 0xeb, 0xe3, 0xeb, 0xbf, 0x6b, 0xb0, 0x12, 0x37, 0x79, 0x02, 0x6c, 0xde,
	0x54, 0xd9, 0xbc, 0x34, 0x7c, 0x3b, 0xbb, 0xf0, 0xf8, 0x3f, 0x43, 0xb2, 0x7d, 0x8c, 0xc1, 0x6f,
	0xc1, 0x6c, 0xdd, 0xf4, 0x5d, 0x8f, 0x38, 0x3c, 0xe3, 0xd3, 0xd4, 0xfb, 0xf8, 0xb2, 0x24, 0xc3,
	0x8a, 0x26, 0x4d, 0x54, 0xeb, 0xf2, 0xf3, 0x20, 0x89, 0x64, 0xa5, 0x44, 0xb5, 0x9c, 0x54, 0xc1,
	0x69, 0x76, 0x74, 0x35, 0x87, 0xcf, 0x28, 0xc6, 0xd4, 0xd5, 0x1c, 0x64, 0xc8, 0xd2, 0x9b, 0x88,
	0x11, 0xbf, 0x4a, 0x78, 0x07, 0x36, 0xce, 0xfd, 0x53, 0x12, 0x66, 0xd5, 0x6c, 0xc3, 0x6d, 0x35,
	0xcb, 0xdb, 0x3b, 0x74, 0xdc, 0x69, 0x42, 0x30, 0x5b, 0xda, 0xbc, 0xba, 0xcc, 0x6f, 0xdc, 0xed,
	0xaa, 0x85, 0xaf, 0x41, 0x40, 0x45, 0x00, 0xc7, 0xb6, 0x3d, 0x81, 0x37, 0xc9, 0xf0, 0xd8, 0xab,
	0x47, 0x1c, 0x96, 0x62, 0x49, 0x03, 0x55, 0xe2, 0x7d, 0xcb, 0x0d, 0xa7, 0x98, 0xe1, 0x7a, 0xb2,
	0x5f, 0x39, 0x42, 0x9a, 0x0d, 0x3a, 0x82, 0x55, 0xbd, 0xc1, 0x19, 0x58, 0x37, 0x8f, 0x1d, 0xdf,
	0xf5, 0x4a, 0xbe, 0xd5, 0x30, 0xf9, 0x89, 0xe3, 0x6c, 0xe9, 0xe9, 0xab, 0xcb, 0xfc, 0xea, 0x76,
	0x9a, 0x02, 0x4e, 0xb7, 0x43, 0x35, 0x80, 0xb6, 0x6f, 0x9a, 0x35, 0x52, 0x77, 0x88, 0x27, 0x8e,
	0x11, 0x9f, 0x95, 0xd6, 0x44, 0x91, 0xa6, 0x82, 0x11, 0xb1, 0x44, 0x2f, 0x85, 0xc4, 0x33, 0xcf,
	0xc0, 0x14, 0x4b, 0x30, 0xe8, 0x21, 0x4c, 0x1a, 0x2d, 0xbd, 0x49, 0xdc, 0x1c, 0xb0, 0x95, 0x80,
	0x47, 0xc3, 0x2e, 0xc5, 0x0a, 0x03, 0xe5, 0x8f, 0x2a, 0xc3, 0xb5, 0xcf, 0x0b, 0xb1, 0xf0, 0x88,
	0x6e, 0x02, 0xd8, 0x2e, 0x2b, 0x3b, 0xc1, 0xfb, 0xec, 0xa8, 0x50, 0x3a, 0xcb, 0x38, 0xaa, 0x05,
	0x12, 0x2c, 0x69, 0xd1, 0x65, 0xe3, 0x10, 0x93, 0xe8, 0x2e, 0x61, 0x45, 0xec, 0x84, 0x6f, 0x46,
	0xfe, 0xae, 0x20, 0x92, 0x61, 0x45, 0x13, 0xbd, 0x03, 0x13, 0x6d, 0x76, 0x06, 0xc2, 0x8f, 0xe7,
	0xbe, 0x36, 0xc0, 0xd1, 0x54, 0x74, 0x70, 0xc3, 0xcf, 0x94, 0xf9, 0xe1, 0x09, 0x87, 0x45, 0x3a,
	0x4c, 0xb0, 0xc7, 0x1d, 0xb9, 0xf9, 0x41, 0x1f, 0x09, 0xa9, 0xcf, 0x4c, 0xb8, 0x0b, 0x56, 0x86,
	0x39, 0x32, 0xaa, 0xc2, 0x58, 0xc3, 0x72, 0x73, 0x0b, 0xcc, 0xc1, 0x4b, 0x03, 0xbd, 0x77, 0xe5,
	0xa7, 0x0e, 0x3b, 0x87, 0x35, 0x4c, 0xa1, 0xd0, 0x0e, 0x80, 0xd1, 0xbe, 0xad, 0xb7, 0x0c, 0xd3,
	0x20, 0x6e, 0x6e, 0x91, 0x75, 0xe6, 0x17, 0x83, 0x21, 0xa8, 0x54, 0x03, 0xc9, 0xa3, 0xcb, 0xfc,
	0x7c, 0xf4, 0x8b, 0xed, 0x55, 0x24, 0x3b, 0xf4, 0x12, 0x64, 0xc5, 0xb7, 0x09, 0xec, 0x05, 0xe4,
	0x92, 0xfa, 0x49, 0xc0, 0x61, 0x24, 0xc2, 0xb2, 0xde, 0xc6, 0xcb, 0x90, 0x95, 0xa6, 0x49, 0x5f,
	0x4f, 0x6b, 0xff, 0x53, 0xe3, 0x7b, 0xdf, 0x64, 0xa4, 0xf9, 0xd4, 0x26, 0x70, 0xc9, 0xaa, 0xf6,
	0x9e, 0xc0, 0x7d, 0x5b, 0xec, 0x42, 0xaf, 0xc1, 0x40, 0x7b, 0xca, 0x2e, 0xf4, 0xc5, 0xd8, 0x2e,
	0xf4, 0xd9, 0xc7, 0x98, 0x7f, 0xbe, 0xff, 0x7c, 0xfc, 0xfe, 0xf3, 0x1f, 0x33, 0x30, 0x47, 0xe3,
	0x90, 0x49, 0xbc, 0x27, 0x96, 0xfb, 0x11, 0x25, 0xf7, 0x2b, 0x0f, 0x76, 0x83, 0x13, 0x56, 0xb8,
	0x6b, 0xe2, 0xd7, 0x8a, 0x25, 0x7e, 0xbb, 0xc3, 0x3a, 0xba, 0x3e, 0xeb, 0xfb, 0xef, 0x0c, 0x7f,
	0xbc, 0x16, 0xea, 0x47, 0xd3, 0x78, 0x47, 0x99, 0xc6, 0xcf, 0xc7, 0xa6, 0xf1, 0x8d, 0x14, 0x2f,
	0x9f, 0xcf, 0xe1, 0x3e, 0xe6, 0xf0, 0xbf, 0x6a, 0xb0, 0xa4, 0xf4, 0xe1, 0x13, 0x48, 0xb6, 0x1b,
	0x6a, 0xb2, 0xfd, 0xca, 0x90, 0x73, 0xab, 0x4b, 0xa6, 0xfd, 0xdd, 0xf1, 0x58, 0xcb, 0x58, 0x9a,
	0x7d, 0x1b, 0x90, 0xee, 0x7b, 0x76, 0xcd, 0x78, 0x68, 0x58, 0x4d, 0x4c, 0x38, 0xc3, 0xb3, 0x36,
	0x4e, 0x97, 0xd6, 0xe8, 0x50, 0x6c, 0x27, 0xa4, 0x38, 0xc5, 0x02, 0x3d, 0x17, 0xdb, 0xf3, 0x4e,
	0xf0, 0x3b, 0xd0, 0x94, 0xfd, 0xee, 0xf5, 0x47, 0x33, 0x63, 0x9f, 0xc4, 0xd1, 0xcc, 0x19, 0xcc,
	0x9d, 0xcb, 0x3d, 0x23, 0x36, 0xc8, 0x5f, 0xee, 0x5a, 0x0b, 0xf1, 0x61, 0x76, 0x11, 0xeb, 0xef,
	0xee, 0x3e, 0xf0, 0x88, 0xe5, 0xd2, 0x20, 0xb5, 0x74, 0x75, 0x99, 0x57, 0xf9, 0x0f, 0xab, 0xb0,
	0xe8, 0xf7, 0x35, 0x40, 0x9e, 0xe9, 0xc6, 0x6e, 0x63, 0xc4, 0x41, 0xff, 0xce, 0x40, 0x5f, 0xa4,
	0xc5, 0xb0, 0xf8, 0x98, 0x25, 0xcb, 0x71, 0x8a, 0xdf, 0xc2, 0x8f, 0x35, 0x58, 0x4e, 0xe1, 0x8b,
	0x91, 0x66, 0x08, 0xdf, 0x4c, 0x49, 0x10, 0xee, 0x0c, 0x39, 0xc1, 0x7b, 0xcf, 0x0b, 0x3e, 0xd4,
	0x60, 0x4e, 0x99, 0x11, 0x9f, 0x85, 0x88, 0xa4, 0x54, 0xb8, 0x5b, 0x44, 0x62, 0x44, 0xa5, 0x68,
	0x7e, 0x26, 0x88, 0x4a, 0xa9, 0x71, 0x17, 0xa2, 0xfa, 0xa7, 0x4c, 0xac, 0x65, 0x74, 0xad, 0x3e,
	0x81, 0x81, 0x33, 0x94, 0x81, 0xdb, 0x1b, 0xb2, 0x71, 0x8c, 0x60, 0xba, 0xa5, 0x13, 0xdf, 0x88,
	0xa5, 0x13, 0x95, 0x51, 0x38, 0xbb, 0x3e, 0xa5, 0xf8, 0x9f, 0x0c, 0x6c, 0x24, 0x6c, 0xa2, 0xb4,
	0xa2, 0xa4, 0xa4, 0x15, 0xc5, 0x58, 0x5a, 0xb1, 0xd9, 0xdd, 0xf2, 0xf3, 0xa4, 0xe2, 0xf1, 0x49,
	0xc5, 0x8f, 0x35, 0x58, 0x4d, 0xf4, 0xe0, 0x13, 0x58, 0xaf, 0xf7, 0xd5, 0xf5, 0x5a, 0x1e, 0xc1,
	0x2c, 0xeb, 0xb2, 0x66, 0xff, 0x6e, 0x3c, 0xa5, 0x85, 0x2c, 0xc1, 0xf8, 0x1d, 0x0d, 0x56, 0x95,
	0xc8, 0x3b, 0x8a, 0x5b, 0x18, 0x76, 0x38, 0x74, 0x90, 0x86, 0x8a, 0xd3, 0x9d, 0x21, 0x03, 0x66,
	0x2d, 0xbb, 0x41, 0x42, 0xe7, 0x99, 0xc1, 0x9d, 0xb3, 0x97, 0x02, 0x87, 0x12, 0x18, 0x56, 0xa0,
	0xe9, 0x04, 0x6a, 0xeb, 0xbe, 0x4b, 0x1a, 0x6c, 0xb2, 0x4e, 0x47, 0x13, 0xa8, 0xca, 0x4a, 0xb1,
	0x90, 0x22, 0x13, 0xe6, 0x5b, 0xfa, 0x83, 0x13, 0x4b, 0xef, 0xe8, 0x86, 0xa9, 0x9f, 0x9a, 0xc1,
	0xb9, 0x7c, 0x77, 0x5e, 0xf3, 0x3d, 0xc3, 0x2c, 0xf2, 0xff, 0xeb, 0x52, 0xac, 0x58, 0xde, 0x91,
	0x53, 0xf3, 0x1c, 0xc3, 0x6a, 0xf2, 0xcf, 0xa5, 0x0e, 0x14, 0x2c, 0x1c, 0xc3, 0x46, 0x7f, 0xa4,
	0xc1, 0x9c, 0x32, 0xbc, 0x22, 0xed, 0xb8, 0x37, 0x32, 0xea, 0x51, 0x2f, 0x9f, 0x56, 0x83, 0x87,
	0x2d, 0x4a, 0x31, 0x56, 0xeb, 0x50, 0xf8, 0xbf, 0x09, 0x58, 0xef, 0x02, 0x37, 0xd2, 0x34, 0x24,
	0xd9, 0xfa, 0xcc, 0x27, 0xdf, 0x7a, 0x74, 0x0b, 0x66, 0xc3, 0xd9, 0xea, 0x5b, 0x1e, 0x9b, 0x2f,
	0x13, 0xd1, 0x61, 0xdd, 0x81, 0x24, 0xc3, 0x8a, 0x26, 0x3a, 0x80, 0x65, 0xbf, 0xdd, 0xd0, 0x3d,
	0xd2, 0x90, 0x95, 0xd8, 0x04, 0x9a, 0x88, 0x8e, 0x99, 0x4f, 0x92, 0x2a, 0x38, 0xcd, 0x8e, 0x7f,
	0xec, 0xab, 0x37, 0x2e, 0x14, 0xb0, 0x09, 0x06, 0x26, 0x7d, 0xec, 0x1b, 0x53, 0xc0, 0x49, 0x1b,
	0xf4, 0x26, 0xac, 0xfb, 0xd1, 0xa4, 0x53, 0xe0, 0x26, 0x19, 0x5c, 0x5e, 0xc0, 0xad, 0x9f, 0xa4,
	0xab, 0xe1, 0x6e, 0xf6, 0xa8, 0x0a, 0x2b, 0x0d, 0xd2, 0x74, 0xf4, 0x46, 0xac, 0xcd, 0x53, 0x0c,
	0x37, 0xfc, 0xcc, 0x6e, 0x27, 0x45, 0x07, 0xa7, 0x5a, 0xa2, 0xf7, 0xd4, 0xd3, 0xab, 0x69, 0x46,
	0x92, 0xfb, 0x23, 0x98, 0x11, 0xbd, 0x27, 0xa8, 0xff, 0xa6, 0xc1, 0x17, 0x7b, 0x99, 0x50, 0xe8,
	0x0c, 0x16, 0x6c, 0xf5, 0xd8, 0x5a, 0xf0, 0x67, 0x4f, 0x27, 0xdc, 0xe1, 0xff, 0xb8, 0x89, 0x09,
	0x70, 0x1c, 0x14, 0xdd, 0x85, 0x49, 0x7e, 0xef, 0x27, 0x62, 0x46, 0x6f, 0x07, 0xe8, 0x61, 0xa0,
	0x67, 0xa6, 0x58, 0x40, 0x14, 0x7e, 0x1a, 0xcf, 0xe4, 0x82, 0x7f, 0xec, 0x20, 0x1d, 0x6b, 0x6b,
	0x3d, 0x1d, 0x6b, 0x9f, 0xc0, 0x64, 0x5d, 0xbe, 0x2b, 0xef, 0x73, 0x6b, 0x16, 0x56, 0x50, 0xec,
	0xcb, 0x04, 0x18, 0xfa, 0x1a, 0x2c, 0x9c, 0x13, 0xc7, 0x22, 0xe6, 0xb6, 0xd3, 0xf4, 0x5b, 0x24,
	0x78, 0x98, 0x39, 0x53, 0x5a, 0xa6, 0x9d, 0x75, 0x57, 0x15, 0xe1, 0xb8, 0x2e, 0x2a, 0x02, 0x90,
	0xc0, 0x87, 0x9b, 0x1b, 0x67, 0x96, 0xec, 0x32, 0x21, 0xf4, 0xec, 0x62, 0x49, 0x03, 0xdd, 0x80,
	0xf1, 0x33, 0xa3, 0xed, 0xb2, 0x95, 0x35, 0x1d, 0x25, 0x86, 0xb7, 0x2b, 0xd5, 0x1a, 0x66, 0x12,
	0xda, 0x37, 0xdc, 0x09, 0x3b, 0x28, 0x9e, 0x54, 0xfb, 0xe6, 0x6e, 0x28, 0xc1, 0x92, 0x56, 0xe9,
	0xb9, 0xf7, 0x3f, 0xda, 0x7c, 0xea, 0x83, 0x8f, 0x36, 0x9f, 0xfa, 0xf0, 0xa3, 0xcd, 0xa7, 0xde,
	0xbb, 0xda, 0xd4, 0xde, 0xbf, 0xda, 0xd4, 0x3e, 0xb8, 0xda, 0xd4, 0x3e, 0xbc, 0xda, 0xd4, 0x7e,
	0x72, 0xb5, 0xa9, 0x7d, 0xef, 0xa7, 0x9b, 0x4f, 0xbd, 0x95, 0xe9, 0xbc, 0xf0, 0xff, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xba, 0xc3, 0xae, 0x9f, 0xcd, 0x4d, 0x00, 0x00,
}

func (m *AWSPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AWSPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ServiceEndpoints) > 0 {
		for iNdEx := len(m.ServiceEndpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ServiceEndpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *AWSPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AWSPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceTags) > 0 {
		for iNdEx := len(m.ResourceTags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourceTags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.ServiceEndpoints) > 0 {
		for iNdEx := len(m.ServiceEndpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ServiceEndpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	i -= len(m.Region)
	copy(dAtA[i:], m.Region)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Region)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AWSResourceTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSResourceTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AWSResourceTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Value)
	copy(dAtA[i:], m.Value)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Value)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Key)
	copy(dAtA[i:], m.Key)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Key)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AWSServiceEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AWSServiceEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AWSServiceEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.URL)
	copy(dAtA[i:], m.URL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.URL)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AlibabaCloudPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlibabaCloudPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AlibabaCloudPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AlibabaCloudPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlibabaCloudPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AlibabaCloudPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceTags) > 0 {
		for iNdEx := len(m.ResourceTags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourceTags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	i -= len(m.ResourceGroupID)
	copy(dAtA[i:], m.ResourceGroupID)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ResourceGroupID)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Region)
	copy(dAtA[i:], m.Region)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Region)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AlibabaCloudResourceTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AlibabaCloudResourceTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AlibabaCloudResourceTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Value)
	copy(dAtA[i:], m.Value)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Value)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Key)
	copy(dAtA[i:], m.Key)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Key)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AzurePlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AzurePlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AzurePlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *AzurePlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AzurePlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AzurePlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.ARMEndpoint)
	copy(dAtA[i:], m.ARMEndpoint)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ARMEndpoint)))
	i--
	dAtA[i] = 0x22
	i -= len(m.CloudName)
	copy(dAtA[i:], m.CloudName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.CloudName)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.NetworkResourceGroupName)
	copy(dAtA[i:], m.NetworkResourceGroupName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NetworkResourceGroupName)))
	i--
	dAtA[i] = 0x12
	i -= len(m.ResourceGroupName)
	copy(dAtA[i:], m.ResourceGroupName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ResourceGroupName)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *BareMetalPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BareMetalPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BareMetalPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *BareMetalPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BareMetalPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BareMetalPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NodeDNSIP)
	copy(dAtA[i:], m.NodeDNSIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeDNSIP)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ConfigMapFileReference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ConfigMapFileReference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ConfigMapFileReference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Key)
	copy(dAtA[i:], m.Key)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Key)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *CustomTLSProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CustomTLSProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CustomTLSProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.TLSProfileSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *DNS) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DNS) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DNS) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *DNSSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DNSSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DNSSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.PrivateZone != nil {
		{
			size, err := m.PrivateZone.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.PublicZone != nil {
		{
			size, err := m.PublicZone.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i -= len(m.BaseDomain)
	copy(dAtA[i:], m.BaseDomain)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.BaseDomain)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *DNSStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DNSStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DNSStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *DNSZone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DNSZone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DNSZone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tags) > 0 {
		keysForTags := make([]string, 0, len(m.Tags))
		for k := range m.Tags {
			keysForTags = append(keysForTags, string(k))
		}
		github_com_gogo_protobuf_sortkeys.Strings(keysForTags)
		for iNdEx := len(keysForTags) - 1; iNdEx >= 0; iNdEx-- {
			v := m.Tags[string(keysForTags[iNdEx])]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintGenerated(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(keysForTags[iNdEx])
			copy(dAtA[i:], keysForTags[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(keysForTags[iNdEx])))
			i--
			dAtA[i] = 0xa
			i = encodeVarintGenerated(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x12
		}
	}
	i -= len(m.ID)
	copy(dAtA[i:], m.ID)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ID)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *EquinixMetalPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EquinixMetalPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EquinixMetalPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *EquinixMetalPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EquinixMetalPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EquinixMetalPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *GCPPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GCPPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GCPPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *GCPPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GCPPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GCPPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Region)
	copy(dAtA[i:], m.Region)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Region)))
	i--
	dAtA[i] = 0x12
	i -= len(m.ProjectID)
	copy(dAtA[i:], m.ProjectID)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ProjectID)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *IBMCloudPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IBMCloudPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBMCloudPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *IBMCloudPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IBMCloudPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IBMCloudPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.CISInstanceCRN)
	copy(dAtA[i:], m.CISInstanceCRN)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.CISInstanceCRN)))
	i--
	dAtA[i] = 0x22
	i -= len(m.ProviderType)
	copy(dAtA[i:], m.ProviderType)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ProviderType)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.ResourceGroupName)
	copy(dAtA[i:], m.ResourceGroupName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ResourceGroupName)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Location)
	copy(dAtA[i:], m.Location)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Location)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *Infrastructure) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Infrastructure) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Infrastructure) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *InfrastructureSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InfrastructureSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InfrastructureSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.PlatformSpec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.CloudConfig.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *InfrastructureStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InfrastructureStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InfrastructureStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.InfrastructureTopology)
	copy(dAtA[i:], m.InfrastructureTopology)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.InfrastructureTopology)))
	i--
	dAtA[i] = 0x42
	i -= len(m.ControlPlaneTopology)
	copy(dAtA[i:], m.ControlPlaneTopology)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ControlPlaneTopology)))
	i--
	dAtA[i] = 0x3a
	i -= len(m.APIServerInternalURL)
	copy(dAtA[i:], m.APIServerInternalURL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalURL)))
	i--
	dAtA[i] = 0x32
	i -= len(m.APIServerURL)
	copy(dAtA[i:], m.APIServerURL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerURL)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.EtcdDiscoveryDomain)
	copy(dAtA[i:], m.EtcdDiscoveryDomain)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.EtcdDiscoveryDomain)))
	i--
	dAtA[i] = 0x22
	if m.PlatformStatus != nil {
		{
			size, err := m.PlatformStatus.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	i -= len(m.Platform)
	copy(dAtA[i:], m.Platform)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Platform)))
	i--
	dAtA[i] = 0x12
	i -= len(m.InfrastructureName)
	copy(dAtA[i:], m.InfrastructureName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.InfrastructureName)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *IntermediateTLSProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *IntermediateTLSProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *IntermediateTLSProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *KubevirtPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubevirtPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubevirtPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *KubevirtPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubevirtPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubevirtPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ModernTLSProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ModernTLSProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ModernTLSProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *OldTLSProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OldTLSProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OldTLSProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *OpenStackPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OpenStackPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OpenStackPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *OpenStackPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OpenStackPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OpenStackPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NodeDNSIP)
	copy(dAtA[i:], m.NodeDNSIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeDNSIP)))
	i--
	dAtA[i] = 0x22
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.CloudName)
	copy(dAtA[i:], m.CloudName)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.CloudName)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *OvirtPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OvirtPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OvirtPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *OvirtPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OvirtPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OvirtPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NodeDNSIP)
	copy(dAtA[i:], m.NodeDNSIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeDNSIP)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AlibabaCloud != nil {
		{
			size, err := m.AlibabaCloud.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.PowerVS != nil {
		{
			size, err := m.PowerVS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.EquinixMetal != nil {
		{
			size, err := m.EquinixMetal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Kubevirt != nil {
		{
			size, err := m.Kubevirt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.IBMCloud != nil {
		{
			size, err := m.IBMCloud.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.VSphere != nil {
		{
			size, err := m.VSphere.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Ovirt != nil {
		{
			size, err := m.Ovirt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.OpenStack != nil {
		{
			size, err := m.OpenStack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.BareMetal != nil {
		{
			size, err := m.BareMetal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.GCP != nil {
		{
			size, err := m.GCP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Azure != nil {
		{
			size, err := m.Azure.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.AWS != nil {
		{
			size, err := m.AWS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AlibabaCloud != nil {
		{
			size, err := m.AlibabaCloud.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.PowerVS != nil {
		{
			size, err := m.PowerVS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.EquinixMetal != nil {
		{
			size, err := m.EquinixMetal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Kubevirt != nil {
		{
			size, err := m.Kubevirt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.IBMCloud != nil {
		{
			size, err := m.IBMCloud.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.VSphere != nil {
		{
			size, err := m.VSphere.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.Ovirt != nil {
		{
			size, err := m.Ovirt.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.OpenStack != nil {
		{
			size, err := m.OpenStack.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.BareMetal != nil {
		{
			size, err := m.BareMetal.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.GCP != nil {
		{
			size, err := m.GCP.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Azure != nil {
		{
			size, err := m.Azure.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.AWS != nil {
		{
			size, err := m.AWS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PowerVSPlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PowerVSPlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PowerVSPlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *PowerVSPlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PowerVSPlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PowerVSPlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.CISInstanceCRN)
	copy(dAtA[i:], m.CISInstanceCRN)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.CISInstanceCRN)))
	i--
	dAtA[i] = 0x22
	if len(m.ServiceEndpoints) > 0 {
		for iNdEx := len(m.ServiceEndpoints) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ServiceEndpoints[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	i -= len(m.Zone)
	copy(dAtA[i:], m.Zone)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Zone)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Region)
	copy(dAtA[i:], m.Region)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Region)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *PowerVSServiceEndpoint) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PowerVSServiceEndpoint) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PowerVSServiceEndpoint) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.URL)
	copy(dAtA[i:], m.URL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.URL)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Name)
	copy(dAtA[i:], m.Name)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Name)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ProxyStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProxyStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProxyStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NoProxy)
	copy(dAtA[i:], m.NoProxy)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NoProxy)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.HTTPSProxy)
	copy(dAtA[i:], m.HTTPSProxy)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.HTTPSProxy)))
	i--
	dAtA[i] = 0x12
	i -= len(m.HTTPProxy)
	copy(dAtA[i:], m.HTTPProxy)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.HTTPProxy)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *TLSProfileSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLSProfileSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLSProfileSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.MinTLSVersion)
	copy(dAtA[i:], m.MinTLSVersion)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.MinTLSVersion)))
	i--
	dAtA[i] = 0x12
	if len(m.Ciphers) > 0 {
		for iNdEx := len(m.Ciphers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ciphers[iNdEx])
			copy(dAtA[i:], m.Ciphers[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(m.Ciphers[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *TLSSecurityProfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TLSSecurityProfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TLSSecurityProfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Custom != nil {
		{
			size, err := m.Custom.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.Modern != nil {
		{
			size, err := m.Modern.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Intermediate != nil {
		{
			size, err := m.Intermediate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Old != nil {
		{
			size, err := m.Old.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *VSpherePlatformSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VSpherePlatformSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VSpherePlatformSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *VSpherePlatformStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VSpherePlatformStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VSpherePlatformStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NodeDNSIP)
	copy(dAtA[i:], m.NodeDNSIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NodeDNSIP)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.IngressIP)
	copy(dAtA[i:], m.IngressIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IngressIP)))
	i--
	dAtA[i] = 0x12
	i -= len(m.APIServerInternalIP)
	copy(dAtA[i:], m.APIServerInternalIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.APIServerInternalIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfigCondition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfigCondition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfigCondition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Reason)
	copy(dAtA[i:], m.Reason)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
	i--
	dAtA[i] = 0x22
	{
		size, err := m.LastTransitionTime.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	i -= len(m.Status)
	copy(dAtA[i:], m.Status)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfigList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfigList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfigList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfigSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfigSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfigSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.ContainerRuntimeConfig != nil {
		{
			size, err := m.ContainerRuntimeConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MachineConfigPoolSelector != nil {
		{
			size, err := m.MachineConfigPoolSelector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfigStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfigStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfigStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Conditions) > 0 {
		for iNdEx := len(m.Conditions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Conditions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	i = encodeVarintGenerated(dAtA, i, uint64(m.ObservedGeneration))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *ContainerRuntimeConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContainerRuntimeConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContainerRuntimeConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.OverlaySize.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	{
		size, err := m.LogSizeMax.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	i -= len(m.LogLevel)
	copy(dAtA[i:], m.LogLevel)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.LogLevel)))
	i--
	dAtA[i] = 0x12
	if m.PidsLimit != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.PidsLimit))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ControllerConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControllerConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControllerConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControllerConfigList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControllerConfigList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControllerConfigList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControllerConfigSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControllerConfigSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControllerConfigSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.NetworkType)
	copy(dAtA[i:], m.NetworkType)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.NetworkType)))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x8a
	i -= len(m.IPFamilies)
	copy(dAtA[i:], m.IPFamilies)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.IPFamilies)))
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x82
	if m.DNS != nil {
		{
			size, err := m.DNS.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.Infra != nil {
		{
			size, err := m.Infra.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.Proxy != nil {
		{
			size, err := m.Proxy.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	i -= len(m.ReleaseImage)
	copy(dAtA[i:], m.ReleaseImage)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ReleaseImage)))
	i--
	dAtA[i] = 0x62
	i -= len(m.OSImageURL)
	copy(dAtA[i:], m.OSImageURL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.OSImageURL)))
	i--
	dAtA[i] = 0x5a
	if len(m.Images) > 0 {
		keysForImages := make([]string, 0, len(m.Images))
		for k := range m.Images {
			keysForImages = append(keysForImages, string(k))
		}
		github_com_gogo_protobuf_sortkeys.Strings(keysForImages)
		for iNdEx := len(keysForImages) - 1; iNdEx >= 0; iNdEx-- {
			v := m.Images[string(keysForImages[iNdEx])]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintGenerated(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(keysForImages[iNdEx])
			copy(dAtA[i:], keysForImages[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(keysForImages[iNdEx])))
			i--
			dAtA[i] = 0xa
			i = encodeVarintGenerated(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0x52
		}
	}
	if m.PullSecret != nil {
		{
			size, err := m.PullSecret.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.AdditionalTrustBundle != nil {
		i -= len(m.AdditionalTrustBundle)
		copy(dAtA[i:], m.AdditionalTrustBundle)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.AdditionalTrustBundle)))
		i--
		dAtA[i] = 0x42
	}
	if m.CloudProviderCAData != nil {
		i -= len(m.CloudProviderCAData)
		copy(dAtA[i:], m.CloudProviderCAData)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.CloudProviderCAData)))
		i--
		dAtA[i] = 0x3a
	}
	if m.RootCAData != nil {
		i -= len(m.RootCAData)
		copy(dAtA[i:], m.RootCAData)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.RootCAData)))
		i--
		dAtA[i] = 0x32
	}
	if m.KubeAPIServerServingCAData != nil {
		i -= len(m.KubeAPIServerServingCAData)
		copy(dAtA[i:], m.KubeAPIServerServingCAData)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.KubeAPIServerServingCAData)))
		i--
		dAtA[i] = 0x2a
	}
	i -= len(m.EtcdDiscoveryDomain)
	copy(dAtA[i:], m.EtcdDiscoveryDomain)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.EtcdDiscoveryDomain)))
	i--
	dAtA[i] = 0x22
	i -= len(m.Platform)
	copy(dAtA[i:], m.Platform)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Platform)))
	i--
	dAtA[i] = 0x1a
	i -= len(m.CloudProviderConfig)
	copy(dAtA[i:], m.CloudProviderConfig)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.CloudProviderConfig)))
	i--
	dAtA[i] = 0x12
	i -= len(m.ClusterDNSIP)
	copy(dAtA[i:], m.ClusterDNSIP)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.ClusterDNSIP)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *ControllerConfigStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControllerConfigStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControllerConfigStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Conditions) > 0 {
		for iNdEx := len(m.Conditions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Conditions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	i = encodeVarintGenerated(dAtA, i, uint64(m.ObservedGeneration))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *ControllerConfigStatusCondition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ControllerConfigStatusCondition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ControllerConfigStatusCondition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Reason)
	copy(dAtA[i:], m.Reason)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
	i--
	dAtA[i] = 0x22
	{
		size, err := m.LastTransitionTime.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	i -= len(m.Status)
	copy(dAtA[i:], m.Status)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *KubeletConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubeletConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubeletConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *KubeletConfigCondition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubeletConfigCondition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubeletConfigCondition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Reason)
	copy(dAtA[i:], m.Reason)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
	i--
	dAtA[i] = 0x22
	{
		size, err := m.LastTransitionTime.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	i -= len(m.Status)
	copy(dAtA[i:], m.Status)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *KubeletConfigList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubeletConfigList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubeletConfigList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *KubeletConfigSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubeletConfigSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubeletConfigSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TLSSecurityProfile != nil {
		{
			size, err := m.TLSSecurityProfile.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.KubeletConfig != nil {
		{
			size, err := m.KubeletConfig.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.MachineConfigPoolSelector != nil {
		{
			size, err := m.MachineConfigPoolSelector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.LogLevel != nil {
		i = encodeVarintGenerated(dAtA, i, uint64(*m.LogLevel))
		i--
		dAtA[i] = 0x10
	}
	if m.AutoSizingReserved != nil {
		i--
		if *m.AutoSizingReserved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *KubeletConfigStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *KubeletConfigStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *KubeletConfigStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Conditions) > 0 {
		for iNdEx := len(m.Conditions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Conditions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	i = encodeVarintGenerated(dAtA, i, uint64(m.ObservedGeneration))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *MachineConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigPool) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPool) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPool) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Status.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.Spec.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	{
		size, err := m.ObjectMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigPoolCondition) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPoolCondition) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPoolCondition) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.Message)
	copy(dAtA[i:], m.Message)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Message)))
	i--
	dAtA[i] = 0x2a
	i -= len(m.Reason)
	copy(dAtA[i:], m.Reason)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Reason)))
	i--
	dAtA[i] = 0x22
	{
		size, err := m.LastTransitionTime.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	i -= len(m.Status)
	copy(dAtA[i:], m.Status)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Status)))
	i--
	dAtA[i] = 0x12
	i -= len(m.Type)
	copy(dAtA[i:], m.Type)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.Type)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigPoolList) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPoolList) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPoolList) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ListMeta.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigPoolSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPoolSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPoolSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Configuration.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.MaxUnavailable != nil {
		{
			size, err := m.MaxUnavailable.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	i--
	if m.Paused {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x18
	if m.NodeSelector != nil {
		{
			size, err := m.NodeSelector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.MachineConfigSelector != nil {
		{
			size, err := m.MachineConfigSelector.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MachineConfigPoolStatus) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPoolStatus) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPoolStatus) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Conditions) > 0 {
		for iNdEx := len(m.Conditions) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Conditions[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	i = encodeVarintGenerated(dAtA, i, uint64(m.DegradedMachineCount))
	i--
	dAtA[i] = 0x38
	i = encodeVarintGenerated(dAtA, i, uint64(m.UnavailableMachineCount))
	i--
	dAtA[i] = 0x30
	i = encodeVarintGenerated(dAtA, i, uint64(m.ReadyMachineCount))
	i--
	dAtA[i] = 0x28
	i = encodeVarintGenerated(dAtA, i, uint64(m.UpdatedMachineCount))
	i--
	dAtA[i] = 0x20
	i = encodeVarintGenerated(dAtA, i, uint64(m.MachineCount))
	i--
	dAtA[i] = 0x18
	{
		size, err := m.Configuration.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	i = encodeVarintGenerated(dAtA, i, uint64(m.ObservedGeneration))
	i--
	dAtA[i] = 0x8
	return len(dAtA) - i, nil
}

func (m *MachineConfigPoolStatusConfiguration) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigPoolStatusConfiguration) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigPoolStatusConfiguration) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Source) > 0 {
		for iNdEx := len(m.Source) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Source[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenerated(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.ObjectReference.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MachineConfigSpec) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MachineConfigSpec) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MachineConfigSpec) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	i -= len(m.KernelType)
	copy(dAtA[i:], m.KernelType)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.KernelType)))
	i--
	dAtA[i] = 0x32
	i--
	if m.FIPS {
		dAtA[i] = 1
	} else {
		dAtA[i] = 0
	}
	i--
	dAtA[i] = 0x28
	if len(m.Extensions) > 0 {
		for iNdEx := len(m.Extensions) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Extensions[iNdEx])
			copy(dAtA[i:], m.Extensions[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(m.Extensions[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.KernelArguments) > 0 {
		for iNdEx := len(m.KernelArguments) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.KernelArguments[iNdEx])
			copy(dAtA[i:], m.KernelArguments[iNdEx])
			i = encodeVarintGenerated(dAtA, i, uint64(len(m.KernelArguments[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	i -= len(m.OSImageURL)
	copy(dAtA[i:], m.OSImageURL)
	i = encodeVarintGenerated(dAtA, i, uint64(len(m.OSImageURL)))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *AWSPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ServiceEndpoints) > 0 {
		for _, e := range m.ServiceEndpoints {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *AWSPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Region)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.ServiceEndpoints) > 0 {
		for _, e := range m.ServiceEndpoints {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	if len(m.ResourceTags) > 0 {
		for _, e := range m.ResourceTags {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *AWSResourceTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Value)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *AWSServiceEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.URL)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *AlibabaCloudPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AlibabaCloudPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Region)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ResourceGroupID)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.ResourceTags) > 0 {
		for _, e := range m.ResourceTags {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *AlibabaCloudResourceTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Key)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Value)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *AzurePlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *AzurePlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ResourceGroupName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NetworkResourceGroupName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.CloudName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ARMEndpoint)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *BareMetalPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *BareMetalPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NodeDNSIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ConfigMapFileReference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Key)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *CustomTLSProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.TLSProfileSpec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *DNS) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *DNSSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BaseDomain)
	n += 1 + l + sovGenerated(uint64(l))
	if m.PublicZone != nil {
		l = m.PublicZone.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.PrivateZone != nil {
		l = m.PrivateZone.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *DNSStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *DNSZone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Tags) > 0 {
		for k, v := range m.Tags {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	return n
}

func (m *EquinixMetalPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *EquinixMetalPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *GCPPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *GCPPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ProjectID)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Region)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *IBMCloudPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *IBMCloudPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Location)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ResourceGroupName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ProviderType)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.CISInstanceCRN)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *Infrastructure) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *InfrastructureSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.CloudConfig.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.PlatformSpec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *InfrastructureStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.InfrastructureName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Platform)
	n += 1 + l + sovGenerated(uint64(l))
	if m.PlatformStatus != nil {
		l = m.PlatformStatus.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.EtcdDiscoveryDomain)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.APIServerURL)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.APIServerInternalURL)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ControlPlaneTopology)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.InfrastructureTopology)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *IntermediateTLSProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *KubevirtPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *KubevirtPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ModernTLSProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *OldTLSProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *OpenStackPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *OpenStackPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.CloudName)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NodeDNSIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *OvirtPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *OvirtPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NodeDNSIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *PlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	if m.AWS != nil {
		l = m.AWS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Azure != nil {
		l = m.Azure.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.GCP != nil {
		l = m.GCP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BareMetal != nil {
		l = m.BareMetal.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.OpenStack != nil {
		l = m.OpenStack.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Ovirt != nil {
		l = m.Ovirt.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.VSphere != nil {
		l = m.VSphere.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.IBMCloud != nil {
		l = m.IBMCloud.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Kubevirt != nil {
		l = m.Kubevirt.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.EquinixMetal != nil {
		l = m.EquinixMetal.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.PowerVS != nil {
		l = m.PowerVS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.AlibabaCloud != nil {
		l = m.AlibabaCloud.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *PlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	if m.AWS != nil {
		l = m.AWS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Azure != nil {
		l = m.Azure.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.GCP != nil {
		l = m.GCP.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.BareMetal != nil {
		l = m.BareMetal.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.OpenStack != nil {
		l = m.OpenStack.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Ovirt != nil {
		l = m.Ovirt.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.VSphere != nil {
		l = m.VSphere.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.IBMCloud != nil {
		l = m.IBMCloud.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Kubevirt != nil {
		l = m.Kubevirt.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.EquinixMetal != nil {
		l = m.EquinixMetal.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.PowerVS != nil {
		l = m.PowerVS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.AlibabaCloud != nil {
		l = m.AlibabaCloud.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *PowerVSPlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *PowerVSPlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Region)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Zone)
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.ServiceEndpoints) > 0 {
		for _, e := range m.ServiceEndpoints {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	l = len(m.CISInstanceCRN)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *PowerVSServiceEndpoint) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.URL)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ProxyStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HTTPProxy)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.HTTPSProxy)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NoProxy)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *TLSProfileSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Ciphers) > 0 {
		for _, s := range m.Ciphers {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	l = len(m.MinTLSVersion)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *TLSSecurityProfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	if m.Old != nil {
		l = m.Old.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Intermediate != nil {
		l = m.Intermediate.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Modern != nil {
		l = m.Modern.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Custom != nil {
		l = m.Custom.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *VSpherePlatformSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *VSpherePlatformStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.APIServerInternalIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.IngressIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.NodeDNSIP)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ContainerRuntimeConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ContainerRuntimeConfigCondition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Status)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.LastTransitionTime.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Reason)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ContainerRuntimeConfigList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ContainerRuntimeConfigSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MachineConfigPoolSelector != nil {
		l = m.MachineConfigPoolSelector.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.ContainerRuntimeConfig != nil {
		l = m.ContainerRuntimeConfig.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *ContainerRuntimeConfigStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.ObservedGeneration))
	if len(m.Conditions) > 0 {
		for _, e := range m.Conditions {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ContainerRuntimeConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.PidsLimit != nil {
		n += 1 + sovGenerated(uint64(*m.PidsLimit))
	}
	l = len(m.LogLevel)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.LogSizeMax.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.OverlaySize.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ControllerConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *ControllerConfigList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ControllerConfigSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ClusterDNSIP)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.CloudProviderConfig)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Platform)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.EtcdDiscoveryDomain)
	n += 1 + l + sovGenerated(uint64(l))
	if m.KubeAPIServerServingCAData != nil {
		l = len(m.KubeAPIServerServingCAData)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.RootCAData != nil {
		l = len(m.RootCAData)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.CloudProviderCAData != nil {
		l = len(m.CloudProviderCAData)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.AdditionalTrustBundle != nil {
		l = len(m.AdditionalTrustBundle)
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.PullSecret != nil {
		l = m.PullSecret.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if len(m.Images) > 0 {
		for k, v := range m.Images {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovGenerated(uint64(len(k))) + 1 + len(v) + sovGenerated(uint64(len(v)))
			n += mapEntrySize + 1 + sovGenerated(uint64(mapEntrySize))
		}
	}
	l = len(m.OSImageURL)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.ReleaseImage)
	n += 1 + l + sovGenerated(uint64(l))
	if m.Proxy != nil {
		l = m.Proxy.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.Infra != nil {
		l = m.Infra.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.DNS != nil {
		l = m.DNS.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.IPFamilies)
	n += 2 + l + sovGenerated(uint64(l))
	l = len(m.NetworkType)
	n += 2 + l + sovGenerated(uint64(l))
	return n
}

func (m *ControllerConfigStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.ObservedGeneration))
	if len(m.Conditions) > 0 {
		for _, e := range m.Conditions {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *ControllerConfigStatusCondition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Status)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.LastTransitionTime.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Reason)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *KubeletConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *KubeletConfigCondition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Status)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.LastTransitionTime.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Reason)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *KubeletConfigList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *KubeletConfigSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AutoSizingReserved != nil {
		n += 2
	}
	if m.LogLevel != nil {
		n += 1 + sovGenerated(uint64(*m.LogLevel))
	}
	if m.MachineConfigPoolSelector != nil {
		l = m.MachineConfigPoolSelector.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.KubeletConfig != nil {
		l = m.KubeletConfig.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.TLSSecurityProfile != nil {
		l = m.TLSSecurityProfile.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	return n
}

func (m *KubeletConfigStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.ObservedGeneration))
	if len(m.Conditions) > 0 {
		for _, e := range m.Conditions {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *MachineConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *MachineConfigList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *MachineConfigPool) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Spec.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Status.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *MachineConfigPoolCondition) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Type)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Status)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.LastTransitionTime.Size()
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Reason)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.Message)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *MachineConfigPoolList) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ListMeta.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *MachineConfigPoolSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MachineConfigSelector != nil {
		l = m.MachineConfigSelector.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	if m.NodeSelector != nil {
		l = m.NodeSelector.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	n += 2
	if m.MaxUnavailable != nil {
		l = m.MaxUnavailable.Size()
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = m.Configuration.Size()
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func (m *MachineConfigPoolStatus) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	n += 1 + sovGenerated(uint64(m.ObservedGeneration))
	l = m.Configuration.Size()
	n += 1 + l + sovGenerated(uint64(l))
	n += 1 + sovGenerated(uint64(m.MachineCount))
	n += 1 + sovGenerated(uint64(m.UpdatedMachineCount))
	n += 1 + sovGenerated(uint64(m.ReadyMachineCount))
	n += 1 + sovGenerated(uint64(m.UnavailableMachineCount))
	n += 1 + sovGenerated(uint64(m.DegradedMachineCount))
	if len(m.Conditions) > 0 {
		for _, e := range m.Conditions {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *MachineConfigPoolStatusConfiguration) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.ObjectReference.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.Source) > 0 {
		for _, e := range m.Source {
			l = e.Size()
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	return n
}

func (m *MachineConfigSpec) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.OSImageURL)
	n += 1 + l + sovGenerated(uint64(l))
	l = m.Config.Size()
	n += 1 + l + sovGenerated(uint64(l))
	if len(m.KernelArguments) > 0 {
		for _, s := range m.KernelArguments {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	if len(m.Extensions) > 0 {
		for _, s := range m.Extensions {
			l = len(s)
			n += 1 + l + sovGenerated(uint64(l))
		}
	}
	n += 2
	l = len(m.KernelType)
	n += 1 + l + sovGenerated(uint64(l))
	return n
}

func sovGenerated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *AWSPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForServiceEndpoints := "[]AWSServiceEndpoint{"
	for _, f := range this.ServiceEndpoints {
		repeatedStringForServiceEndpoints += strings.Replace(strings.Replace(f.String(), "AWSServiceEndpoint", "AWSServiceEndpoint", 1), `&`, ``, 1) + ","
	}
	repeatedStringForServiceEndpoints += "}"
	s := strings.Join([]string{`&AWSPlatformSpec{`,
		`ServiceEndpoints:` + repeatedStringForServiceEndpoints + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForServiceEndpoints := "[]AWSServiceEndpoint{"
	for _, f := range this.ServiceEndpoints {
		repeatedStringForServiceEndpoints += strings.Replace(strings.Replace(f.String(), "AWSServiceEndpoint", "AWSServiceEndpoint", 1), `&`, ``, 1) + ","
	}
	repeatedStringForServiceEndpoints += "}"
	repeatedStringForResourceTags := "[]AWSResourceTag{"
	for _, f := range this.ResourceTags {
		repeatedStringForResourceTags += strings.Replace(strings.Replace(f.String(), "AWSResourceTag", "AWSResourceTag", 1), `&`, ``, 1) + ","
	}
	repeatedStringForResourceTags += "}"
	s := strings.Join([]string{`&AWSPlatformStatus{`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`ServiceEndpoints:` + repeatedStringForServiceEndpoints + `,`,
		`ResourceTags:` + repeatedStringForResourceTags + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSResourceTag) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSResourceTag{`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AWSServiceEndpoint) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AWSServiceEndpoint{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`URL:` + fmt.Sprintf("%v", this.URL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AlibabaCloudPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AlibabaCloudPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *AlibabaCloudPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForResourceTags := "[]AlibabaCloudResourceTag{"
	for _, f := range this.ResourceTags {
		repeatedStringForResourceTags += strings.Replace(strings.Replace(f.String(), "AlibabaCloudResourceTag", "AlibabaCloudResourceTag", 1), `&`, ``, 1) + ","
	}
	repeatedStringForResourceTags += "}"
	s := strings.Join([]string{`&AlibabaCloudPlatformStatus{`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`ResourceGroupID:` + fmt.Sprintf("%v", this.ResourceGroupID) + `,`,
		`ResourceTags:` + repeatedStringForResourceTags + `,`,
		`}`,
	}, "")
	return s
}
func (this *AlibabaCloudResourceTag) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AlibabaCloudResourceTag{`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AzurePlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AzurePlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *AzurePlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AzurePlatformStatus{`,
		`ResourceGroupName:` + fmt.Sprintf("%v", this.ResourceGroupName) + `,`,
		`NetworkResourceGroupName:` + fmt.Sprintf("%v", this.NetworkResourceGroupName) + `,`,
		`CloudName:` + fmt.Sprintf("%v", this.CloudName) + `,`,
		`ARMEndpoint:` + fmt.Sprintf("%v", this.ARMEndpoint) + `,`,
		`}`,
	}, "")
	return s
}
func (this *BareMetalPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BareMetalPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *BareMetalPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&BareMetalPlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`NodeDNSIP:` + fmt.Sprintf("%v", this.NodeDNSIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ConfigMapFileReference) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ConfigMapFileReference{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`Key:` + fmt.Sprintf("%v", this.Key) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CustomTLSProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CustomTLSProfile{`,
		`TLSProfileSpec:` + strings.Replace(strings.Replace(this.TLSProfileSpec.String(), "TLSProfileSpec", "TLSProfileSpec", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DNS) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DNS{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "DNSSpec", "DNSSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "DNSStatus", "DNSStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DNSSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DNSSpec{`,
		`BaseDomain:` + fmt.Sprintf("%v", this.BaseDomain) + `,`,
		`PublicZone:` + strings.Replace(this.PublicZone.String(), "DNSZone", "DNSZone", 1) + `,`,
		`PrivateZone:` + strings.Replace(this.PrivateZone.String(), "DNSZone", "DNSZone", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DNSStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DNSStatus{`,
		`}`,
	}, "")
	return s
}
func (this *DNSZone) String() string {
	if this == nil {
		return "nil"
	}
	keysForTags := make([]string, 0, len(this.Tags))
	for k := range this.Tags {
		keysForTags = append(keysForTags, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForTags)
	mapStringForTags := "map[string]string{"
	for _, k := range keysForTags {
		mapStringForTags += fmt.Sprintf("%v: %v,", k, this.Tags[k])
	}
	mapStringForTags += "}"
	s := strings.Join([]string{`&DNSZone{`,
		`ID:` + fmt.Sprintf("%v", this.ID) + `,`,
		`Tags:` + mapStringForTags + `,`,
		`}`,
	}, "")
	return s
}
func (this *EquinixMetalPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EquinixMetalPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *EquinixMetalPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&EquinixMetalPlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GCPPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GCPPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *GCPPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GCPPlatformStatus{`,
		`ProjectID:` + fmt.Sprintf("%v", this.ProjectID) + `,`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IBMCloudPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IBMCloudPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *IBMCloudPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IBMCloudPlatformStatus{`,
		`Location:` + fmt.Sprintf("%v", this.Location) + `,`,
		`ResourceGroupName:` + fmt.Sprintf("%v", this.ResourceGroupName) + `,`,
		`ProviderType:` + fmt.Sprintf("%v", this.ProviderType) + `,`,
		`CISInstanceCRN:` + fmt.Sprintf("%v", this.CISInstanceCRN) + `,`,
		`}`,
	}, "")
	return s
}
func (this *Infrastructure) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&Infrastructure{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "InfrastructureSpec", "InfrastructureSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "InfrastructureStatus", "InfrastructureStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *InfrastructureSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InfrastructureSpec{`,
		`CloudConfig:` + strings.Replace(strings.Replace(this.CloudConfig.String(), "ConfigMapFileReference", "ConfigMapFileReference", 1), `&`, ``, 1) + `,`,
		`PlatformSpec:` + strings.Replace(strings.Replace(this.PlatformSpec.String(), "PlatformSpec", "PlatformSpec", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *InfrastructureStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&InfrastructureStatus{`,
		`InfrastructureName:` + fmt.Sprintf("%v", this.InfrastructureName) + `,`,
		`Platform:` + fmt.Sprintf("%v", this.Platform) + `,`,
		`PlatformStatus:` + strings.Replace(this.PlatformStatus.String(), "PlatformStatus", "PlatformStatus", 1) + `,`,
		`EtcdDiscoveryDomain:` + fmt.Sprintf("%v", this.EtcdDiscoveryDomain) + `,`,
		`APIServerURL:` + fmt.Sprintf("%v", this.APIServerURL) + `,`,
		`APIServerInternalURL:` + fmt.Sprintf("%v", this.APIServerInternalURL) + `,`,
		`ControlPlaneTopology:` + fmt.Sprintf("%v", this.ControlPlaneTopology) + `,`,
		`InfrastructureTopology:` + fmt.Sprintf("%v", this.InfrastructureTopology) + `,`,
		`}`,
	}, "")
	return s
}
func (this *IntermediateTLSProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&IntermediateTLSProfile{`,
		`}`,
	}, "")
	return s
}
func (this *KubevirtPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&KubevirtPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *KubevirtPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&KubevirtPlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ModernTLSProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ModernTLSProfile{`,
		`}`,
	}, "")
	return s
}
func (this *OldTLSProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OldTLSProfile{`,
		`}`,
	}, "")
	return s
}
func (this *OpenStackPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OpenStackPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *OpenStackPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OpenStackPlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`CloudName:` + fmt.Sprintf("%v", this.CloudName) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`NodeDNSIP:` + fmt.Sprintf("%v", this.NodeDNSIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *OvirtPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OvirtPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *OvirtPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&OvirtPlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`NodeDNSIP:` + fmt.Sprintf("%v", this.NodeDNSIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PlatformSpec{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`AWS:` + strings.Replace(this.AWS.String(), "AWSPlatformSpec", "AWSPlatformSpec", 1) + `,`,
		`Azure:` + strings.Replace(this.Azure.String(), "AzurePlatformSpec", "AzurePlatformSpec", 1) + `,`,
		`GCP:` + strings.Replace(this.GCP.String(), "GCPPlatformSpec", "GCPPlatformSpec", 1) + `,`,
		`BareMetal:` + strings.Replace(this.BareMetal.String(), "BareMetalPlatformSpec", "BareMetalPlatformSpec", 1) + `,`,
		`OpenStack:` + strings.Replace(this.OpenStack.String(), "OpenStackPlatformSpec", "OpenStackPlatformSpec", 1) + `,`,
		`Ovirt:` + strings.Replace(this.Ovirt.String(), "OvirtPlatformSpec", "OvirtPlatformSpec", 1) + `,`,
		`VSphere:` + strings.Replace(this.VSphere.String(), "VSpherePlatformSpec", "VSpherePlatformSpec", 1) + `,`,
		`IBMCloud:` + strings.Replace(this.IBMCloud.String(), "IBMCloudPlatformSpec", "IBMCloudPlatformSpec", 1) + `,`,
		`Kubevirt:` + strings.Replace(this.Kubevirt.String(), "KubevirtPlatformSpec", "KubevirtPlatformSpec", 1) + `,`,
		`EquinixMetal:` + strings.Replace(this.EquinixMetal.String(), "EquinixMetalPlatformSpec", "EquinixMetalPlatformSpec", 1) + `,`,
		`PowerVS:` + strings.Replace(this.PowerVS.String(), "PowerVSPlatformSpec", "PowerVSPlatformSpec", 1) + `,`,
		`AlibabaCloud:` + strings.Replace(this.AlibabaCloud.String(), "AlibabaCloudPlatformSpec", "AlibabaCloudPlatformSpec", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PlatformStatus{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`AWS:` + strings.Replace(this.AWS.String(), "AWSPlatformStatus", "AWSPlatformStatus", 1) + `,`,
		`Azure:` + strings.Replace(this.Azure.String(), "AzurePlatformStatus", "AzurePlatformStatus", 1) + `,`,
		`GCP:` + strings.Replace(this.GCP.String(), "GCPPlatformStatus", "GCPPlatformStatus", 1) + `,`,
		`BareMetal:` + strings.Replace(this.BareMetal.String(), "BareMetalPlatformStatus", "BareMetalPlatformStatus", 1) + `,`,
		`OpenStack:` + strings.Replace(this.OpenStack.String(), "OpenStackPlatformStatus", "OpenStackPlatformStatus", 1) + `,`,
		`Ovirt:` + strings.Replace(this.Ovirt.String(), "OvirtPlatformStatus", "OvirtPlatformStatus", 1) + `,`,
		`VSphere:` + strings.Replace(this.VSphere.String(), "VSpherePlatformStatus", "VSpherePlatformStatus", 1) + `,`,
		`IBMCloud:` + strings.Replace(this.IBMCloud.String(), "IBMCloudPlatformStatus", "IBMCloudPlatformStatus", 1) + `,`,
		`Kubevirt:` + strings.Replace(this.Kubevirt.String(), "KubevirtPlatformStatus", "KubevirtPlatformStatus", 1) + `,`,
		`EquinixMetal:` + strings.Replace(this.EquinixMetal.String(), "EquinixMetalPlatformStatus", "EquinixMetalPlatformStatus", 1) + `,`,
		`PowerVS:` + strings.Replace(this.PowerVS.String(), "PowerVSPlatformStatus", "PowerVSPlatformStatus", 1) + `,`,
		`AlibabaCloud:` + strings.Replace(this.AlibabaCloud.String(), "AlibabaCloudPlatformStatus", "AlibabaCloudPlatformStatus", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PowerVSPlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PowerVSPlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *PowerVSPlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForServiceEndpoints := "[]PowerVSServiceEndpoint{"
	for _, f := range this.ServiceEndpoints {
		repeatedStringForServiceEndpoints += strings.Replace(strings.Replace(f.String(), "PowerVSServiceEndpoint", "PowerVSServiceEndpoint", 1), `&`, ``, 1) + ","
	}
	repeatedStringForServiceEndpoints += "}"
	s := strings.Join([]string{`&PowerVSPlatformStatus{`,
		`Region:` + fmt.Sprintf("%v", this.Region) + `,`,
		`Zone:` + fmt.Sprintf("%v", this.Zone) + `,`,
		`ServiceEndpoints:` + repeatedStringForServiceEndpoints + `,`,
		`CISInstanceCRN:` + fmt.Sprintf("%v", this.CISInstanceCRN) + `,`,
		`}`,
	}, "")
	return s
}
func (this *PowerVSServiceEndpoint) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&PowerVSServiceEndpoint{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`URL:` + fmt.Sprintf("%v", this.URL) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ProxyStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ProxyStatus{`,
		`HTTPProxy:` + fmt.Sprintf("%v", this.HTTPProxy) + `,`,
		`HTTPSProxy:` + fmt.Sprintf("%v", this.HTTPSProxy) + `,`,
		`NoProxy:` + fmt.Sprintf("%v", this.NoProxy) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TLSProfileSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TLSProfileSpec{`,
		`Ciphers:` + fmt.Sprintf("%v", this.Ciphers) + `,`,
		`MinTLSVersion:` + fmt.Sprintf("%v", this.MinTLSVersion) + `,`,
		`}`,
	}, "")
	return s
}
func (this *TLSSecurityProfile) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&TLSSecurityProfile{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Old:` + strings.Replace(this.Old.String(), "OldTLSProfile", "OldTLSProfile", 1) + `,`,
		`Intermediate:` + strings.Replace(this.Intermediate.String(), "IntermediateTLSProfile", "IntermediateTLSProfile", 1) + `,`,
		`Modern:` + strings.Replace(this.Modern.String(), "ModernTLSProfile", "ModernTLSProfile", 1) + `,`,
		`Custom:` + strings.Replace(this.Custom.String(), "CustomTLSProfile", "CustomTLSProfile", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *VSpherePlatformSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VSpherePlatformSpec{`,
		`}`,
	}, "")
	return s
}
func (this *VSpherePlatformStatus) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&VSpherePlatformStatus{`,
		`APIServerInternalIP:` + fmt.Sprintf("%v", this.APIServerInternalIP) + `,`,
		`IngressIP:` + fmt.Sprintf("%v", this.IngressIP) + `,`,
		`NodeDNSIP:` + fmt.Sprintf("%v", this.NodeDNSIP) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ContainerRuntimeConfig{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "ContainerRuntimeConfigSpec", "ContainerRuntimeConfigSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "ContainerRuntimeConfigStatus", "ContainerRuntimeConfigStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfigCondition) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ContainerRuntimeConfigCondition{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`LastTransitionTime:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.LastTransitionTime), "Time", "v1.Time", 1), `&`, ``, 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfigList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]ContainerRuntimeConfig{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "ContainerRuntimeConfig", "ContainerRuntimeConfig", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&ContainerRuntimeConfigList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfigSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ContainerRuntimeConfigSpec{`,
		`MachineConfigPoolSelector:` + strings.Replace(fmt.Sprintf("%v", this.MachineConfigPoolSelector), "LabelSelector", "v1.LabelSelector", 1) + `,`,
		`ContainerRuntimeConfig:` + strings.Replace(this.ContainerRuntimeConfig.String(), "ContainerRuntimeConfiguration", "ContainerRuntimeConfiguration", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfigStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForConditions := "[]ContainerRuntimeConfigCondition{"
	for _, f := range this.Conditions {
		repeatedStringForConditions += strings.Replace(strings.Replace(f.String(), "ContainerRuntimeConfigCondition", "ContainerRuntimeConfigCondition", 1), `&`, ``, 1) + ","
	}
	repeatedStringForConditions += "}"
	s := strings.Join([]string{`&ContainerRuntimeConfigStatus{`,
		`ObservedGeneration:` + fmt.Sprintf("%v", this.ObservedGeneration) + `,`,
		`Conditions:` + repeatedStringForConditions + `,`,
		`}`,
	}, "")
	return s
}
func (this *ContainerRuntimeConfiguration) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ContainerRuntimeConfiguration{`,
		`PidsLimit:` + valueToStringGenerated(this.PidsLimit) + `,`,
		`LogLevel:` + fmt.Sprintf("%v", this.LogLevel) + `,`,
		`LogSizeMax:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.LogSizeMax), "Quantity", "resource.Quantity", 1), `&`, ``, 1) + `,`,
		`OverlaySize:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.OverlaySize), "Quantity", "resource.Quantity", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControllerConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControllerConfig{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "ControllerConfigSpec", "ControllerConfigSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "ControllerConfigStatus", "ControllerConfigStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControllerConfigList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]ControllerConfig{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "ControllerConfig", "ControllerConfig", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&ControllerConfigList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControllerConfigSpec) String() string {
	if this == nil {
		return "nil"
	}
	keysForImages := make([]string, 0, len(this.Images))
	for k := range this.Images {
		keysForImages = append(keysForImages, k)
	}
	github_com_gogo_protobuf_sortkeys.Strings(keysForImages)
	mapStringForImages := "map[string]string{"
	for _, k := range keysForImages {
		mapStringForImages += fmt.Sprintf("%v: %v,", k, this.Images[k])
	}
	mapStringForImages += "}"
	s := strings.Join([]string{`&ControllerConfigSpec{`,
		`ClusterDNSIP:` + fmt.Sprintf("%v", this.ClusterDNSIP) + `,`,
		`CloudProviderConfig:` + fmt.Sprintf("%v", this.CloudProviderConfig) + `,`,
		`Platform:` + fmt.Sprintf("%v", this.Platform) + `,`,
		`EtcdDiscoveryDomain:` + fmt.Sprintf("%v", this.EtcdDiscoveryDomain) + `,`,
		`KubeAPIServerServingCAData:` + valueToStringGenerated(this.KubeAPIServerServingCAData) + `,`,
		`RootCAData:` + valueToStringGenerated(this.RootCAData) + `,`,
		`CloudProviderCAData:` + valueToStringGenerated(this.CloudProviderCAData) + `,`,
		`AdditionalTrustBundle:` + valueToStringGenerated(this.AdditionalTrustBundle) + `,`,
		`PullSecret:` + strings.Replace(fmt.Sprintf("%v", this.PullSecret), "ObjectReference", "v11.ObjectReference", 1) + `,`,
		`Images:` + mapStringForImages + `,`,
		`OSImageURL:` + fmt.Sprintf("%v", this.OSImageURL) + `,`,
		`ReleaseImage:` + fmt.Sprintf("%v", this.ReleaseImage) + `,`,
		`Proxy:` + strings.Replace(this.Proxy.String(), "ProxyStatus", "ProxyStatus", 1) + `,`,
		`Infra:` + strings.Replace(this.Infra.String(), "Infrastructure", "Infrastructure", 1) + `,`,
		`DNS:` + strings.Replace(this.DNS.String(), "DNS", "DNS", 1) + `,`,
		`IPFamilies:` + fmt.Sprintf("%v", this.IPFamilies) + `,`,
		`NetworkType:` + fmt.Sprintf("%v", this.NetworkType) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControllerConfigStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForConditions := "[]ControllerConfigStatusCondition{"
	for _, f := range this.Conditions {
		repeatedStringForConditions += strings.Replace(strings.Replace(f.String(), "ControllerConfigStatusCondition", "ControllerConfigStatusCondition", 1), `&`, ``, 1) + ","
	}
	repeatedStringForConditions += "}"
	s := strings.Join([]string{`&ControllerConfigStatus{`,
		`ObservedGeneration:` + fmt.Sprintf("%v", this.ObservedGeneration) + `,`,
		`Conditions:` + repeatedStringForConditions + `,`,
		`}`,
	}, "")
	return s
}
func (this *ControllerConfigStatusCondition) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ControllerConfigStatusCondition{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`LastTransitionTime:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.LastTransitionTime), "Time", "v1.Time", 1), `&`, ``, 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *KubeletConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&KubeletConfig{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "KubeletConfigSpec", "KubeletConfigSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "KubeletConfigStatus", "KubeletConfigStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *KubeletConfigCondition) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&KubeletConfigCondition{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`LastTransitionTime:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.LastTransitionTime), "Time", "v1.Time", 1), `&`, ``, 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *KubeletConfigList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]KubeletConfig{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "KubeletConfig", "KubeletConfig", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&KubeletConfigList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *KubeletConfigSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&KubeletConfigSpec{`,
		`AutoSizingReserved:` + valueToStringGenerated(this.AutoSizingReserved) + `,`,
		`LogLevel:` + valueToStringGenerated(this.LogLevel) + `,`,
		`MachineConfigPoolSelector:` + strings.Replace(fmt.Sprintf("%v", this.MachineConfigPoolSelector), "LabelSelector", "v1.LabelSelector", 1) + `,`,
		`KubeletConfig:` + strings.Replace(fmt.Sprintf("%v", this.KubeletConfig), "RawExtension", "runtime.RawExtension", 1) + `,`,
		`TLSSecurityProfile:` + strings.Replace(this.TLSSecurityProfile.String(), "TLSSecurityProfile", "TLSSecurityProfile", 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *KubeletConfigStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForConditions := "[]KubeletConfigCondition{"
	for _, f := range this.Conditions {
		repeatedStringForConditions += strings.Replace(strings.Replace(f.String(), "KubeletConfigCondition", "KubeletConfigCondition", 1), `&`, ``, 1) + ","
	}
	repeatedStringForConditions += "}"
	s := strings.Join([]string{`&KubeletConfigStatus{`,
		`ObservedGeneration:` + fmt.Sprintf("%v", this.ObservedGeneration) + `,`,
		`Conditions:` + repeatedStringForConditions + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfig) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MachineConfig{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "MachineConfigSpec", "MachineConfigSpec", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]MachineConfig{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "MachineConfig", "MachineConfig", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&MachineConfigList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPool) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MachineConfigPool{`,
		`ObjectMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectMeta), "ObjectMeta", "v1.ObjectMeta", 1), `&`, ``, 1) + `,`,
		`Spec:` + strings.Replace(strings.Replace(this.Spec.String(), "MachineConfigPoolSpec", "MachineConfigPoolSpec", 1), `&`, ``, 1) + `,`,
		`Status:` + strings.Replace(strings.Replace(this.Status.String(), "MachineConfigPoolStatus", "MachineConfigPoolStatus", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPoolCondition) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MachineConfigPoolCondition{`,
		`Type:` + fmt.Sprintf("%v", this.Type) + `,`,
		`Status:` + fmt.Sprintf("%v", this.Status) + `,`,
		`LastTransitionTime:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.LastTransitionTime), "Time", "v1.Time", 1), `&`, ``, 1) + `,`,
		`Reason:` + fmt.Sprintf("%v", this.Reason) + `,`,
		`Message:` + fmt.Sprintf("%v", this.Message) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPoolList) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForItems := "[]MachineConfigPool{"
	for _, f := range this.Items {
		repeatedStringForItems += strings.Replace(strings.Replace(f.String(), "MachineConfigPool", "MachineConfigPool", 1), `&`, ``, 1) + ","
	}
	repeatedStringForItems += "}"
	s := strings.Join([]string{`&MachineConfigPoolList{`,
		`ListMeta:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ListMeta), "ListMeta", "v1.ListMeta", 1), `&`, ``, 1) + `,`,
		`Items:` + repeatedStringForItems + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPoolSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MachineConfigPoolSpec{`,
		`MachineConfigSelector:` + strings.Replace(fmt.Sprintf("%v", this.MachineConfigSelector), "LabelSelector", "v1.LabelSelector", 1) + `,`,
		`NodeSelector:` + strings.Replace(fmt.Sprintf("%v", this.NodeSelector), "LabelSelector", "v1.LabelSelector", 1) + `,`,
		`Paused:` + fmt.Sprintf("%v", this.Paused) + `,`,
		`MaxUnavailable:` + strings.Replace(fmt.Sprintf("%v", this.MaxUnavailable), "IntOrString", "intstr.IntOrString", 1) + `,`,
		`Configuration:` + strings.Replace(strings.Replace(this.Configuration.String(), "MachineConfigPoolStatusConfiguration", "MachineConfigPoolStatusConfiguration", 1), `&`, ``, 1) + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPoolStatus) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForConditions := "[]MachineConfigPoolCondition{"
	for _, f := range this.Conditions {
		repeatedStringForConditions += strings.Replace(strings.Replace(f.String(), "MachineConfigPoolCondition", "MachineConfigPoolCondition", 1), `&`, ``, 1) + ","
	}
	repeatedStringForConditions += "}"
	s := strings.Join([]string{`&MachineConfigPoolStatus{`,
		`ObservedGeneration:` + fmt.Sprintf("%v", this.ObservedGeneration) + `,`,
		`Configuration:` + strings.Replace(strings.Replace(this.Configuration.String(), "MachineConfigPoolStatusConfiguration", "MachineConfigPoolStatusConfiguration", 1), `&`, ``, 1) + `,`,
		`MachineCount:` + fmt.Sprintf("%v", this.MachineCount) + `,`,
		`UpdatedMachineCount:` + fmt.Sprintf("%v", this.UpdatedMachineCount) + `,`,
		`ReadyMachineCount:` + fmt.Sprintf("%v", this.ReadyMachineCount) + `,`,
		`UnavailableMachineCount:` + fmt.Sprintf("%v", this.UnavailableMachineCount) + `,`,
		`DegradedMachineCount:` + fmt.Sprintf("%v", this.DegradedMachineCount) + `,`,
		`Conditions:` + repeatedStringForConditions + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigPoolStatusConfiguration) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForSource := "[]ObjectReference{"
	for _, f := range this.Source {
		repeatedStringForSource += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForSource += "}"
	s := strings.Join([]string{`&MachineConfigPoolStatusConfiguration{`,
		`ObjectReference:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.ObjectReference), "ObjectReference", "v11.ObjectReference", 1), `&`, ``, 1) + `,`,
		`Source:` + repeatedStringForSource + `,`,
		`}`,
	}, "")
	return s
}
func (this *MachineConfigSpec) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&MachineConfigSpec{`,
		`OSImageURL:` + fmt.Sprintf("%v", this.OSImageURL) + `,`,
		`Config:` + strings.Replace(strings.Replace(fmt.Sprintf("%v", this.Config), "RawExtension", "runtime.RawExtension", 1), `&`, ``, 1) + `,`,
		`KernelArguments:` + fmt.Sprintf("%v", this.KernelArguments) + `,`,
		`Extensions:` + fmt.Sprintf("%v", this.Extensions) + `,`,
		`FIPS:` + fmt.Sprintf("%v", this.FIPS) + `,`,
		`KernelType:` + fmt.Sprintf("%v", this.KernelType) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringGenerated(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *AWSPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceEndpoints = append(m.ServiceEndpoints, AWSServiceEndpoint{})
			if err := m.ServiceEndpoints[len(m.ServiceEndpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceEndpoints = append(m.ServiceEndpoints, AWSServiceEndpoint{})
			if err := m.ServiceEndpoints[len(m.ServiceEndpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceTags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceTags = append(m.ResourceTags, AWSResourceTag{})
			if err := m.ResourceTags[len(m.ResourceTags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSResourceTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSResourceTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSResourceTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AWSServiceEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AWSServiceEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AWSServiceEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AlibabaCloudPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlibabaCloudPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlibabaCloudPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AlibabaCloudPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlibabaCloudPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlibabaCloudPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceTags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceTags = append(m.ResourceTags, AlibabaCloudResourceTag{})
			if err := m.ResourceTags[len(m.ResourceTags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AlibabaCloudResourceTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AlibabaCloudResourceTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AlibabaCloudResourceTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AzurePlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AzurePlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AzurePlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AzurePlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AzurePlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AzurePlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudName = github_com_openshift_api_config_v1.AzureCloudEnvironment(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ARMEndpoint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ARMEndpoint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BareMetalPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BareMetalPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BareMetalPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BareMetalPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BareMetalPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BareMetalPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeDNSIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeDNSIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ConfigMapFileReference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ConfigMapFileReference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ConfigMapFileReference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CustomTLSProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CustomTLSProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CustomTLSProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TLSProfileSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.TLSProfileSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DNS) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DNS: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DNS: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DNSSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DNSSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DNSSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicZone", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PublicZone == nil {
				m.PublicZone = &DNSZone{}
			}
			if err := m.PublicZone.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivateZone", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PrivateZone == nil {
				m.PrivateZone = &DNSZone{}
			}
			if err := m.PrivateZone.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DNSStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DNSStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DNSStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DNSZone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DNSZone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DNSZone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Tags == nil {
				m.Tags = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGenerated
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGenerated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthGenerated
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthGenerated
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGenerated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthGenerated
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthGenerated
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGenerated(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGenerated
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Tags[mapkey] = mapvalue
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EquinixMetalPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EquinixMetalPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EquinixMetalPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *EquinixMetalPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EquinixMetalPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EquinixMetalPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GCPPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GCPPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GCPPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GCPPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GCPPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GCPPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProjectID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProjectID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IBMCloudPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IBMCloudPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IBMCloudPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IBMCloudPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IBMCloudPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IBMCloudPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceGroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceGroupName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProviderType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProviderType = github_com_openshift_api_config_v1.IBMCloudProviderType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CISInstanceCRN", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CISInstanceCRN = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Infrastructure) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Infrastructure: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Infrastructure: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InfrastructureSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InfrastructureSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InfrastructureSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.CloudConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformSpec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PlatformSpec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InfrastructureStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InfrastructureStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InfrastructureStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfrastructureName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfrastructureName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = github_com_openshift_api_config_v1.PlatformType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlatformStatus", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlatformStatus == nil {
				m.PlatformStatus = &PlatformStatus{}
			}
			if err := m.PlatformStatus.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtcdDiscoveryDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EtcdDiscoveryDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ControlPlaneTopology", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ControlPlaneTopology = github_com_openshift_api_config_v1.TopologyMode(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InfrastructureTopology", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InfrastructureTopology = github_com_openshift_api_config_v1.TopologyMode(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *IntermediateTLSProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: IntermediateTLSProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: IntermediateTLSProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubevirtPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubevirtPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubevirtPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubevirtPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubevirtPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubevirtPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ModernTLSProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ModernTLSProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ModernTLSProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OldTLSProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OldTLSProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OldTLSProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OpenStackPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenStackPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenStackPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OpenStackPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OpenStackPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OpenStackPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeDNSIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeDNSIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OvirtPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OvirtPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OvirtPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OvirtPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OvirtPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OvirtPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeDNSIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeDNSIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = github_com_openshift_api_config_v1.PlatformType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AWS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AWS == nil {
				m.AWS = &AWSPlatformSpec{}
			}
			if err := m.AWS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Azure", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Azure == nil {
				m.Azure = &AzurePlatformSpec{}
			}
			if err := m.Azure.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GCP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GCP == nil {
				m.GCP = &GCPPlatformSpec{}
			}
			if err := m.GCP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BareMetal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BareMetal == nil {
				m.BareMetal = &BareMetalPlatformSpec{}
			}
			if err := m.BareMetal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenStack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OpenStack == nil {
				m.OpenStack = &OpenStackPlatformSpec{}
			}
			if err := m.OpenStack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ovirt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ovirt == nil {
				m.Ovirt = &OvirtPlatformSpec{}
			}
			if err := m.Ovirt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VSphere", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VSphere == nil {
				m.VSphere = &VSpherePlatformSpec{}
			}
			if err := m.VSphere.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IBMCloud", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IBMCloud == nil {
				m.IBMCloud = &IBMCloudPlatformSpec{}
			}
			if err := m.IBMCloud.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kubevirt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Kubevirt == nil {
				m.Kubevirt = &KubevirtPlatformSpec{}
			}
			if err := m.Kubevirt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquinixMetal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EquinixMetal == nil {
				m.EquinixMetal = &EquinixMetalPlatformSpec{}
			}
			if err := m.EquinixMetal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerVS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PowerVS == nil {
				m.PowerVS = &PowerVSPlatformSpec{}
			}
			if err := m.PowerVS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlibabaCloud", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AlibabaCloud == nil {
				m.AlibabaCloud = &AlibabaCloudPlatformSpec{}
			}
			if err := m.AlibabaCloud.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = github_com_openshift_api_config_v1.PlatformType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AWS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AWS == nil {
				m.AWS = &AWSPlatformStatus{}
			}
			if err := m.AWS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Azure", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Azure == nil {
				m.Azure = &AzurePlatformStatus{}
			}
			if err := m.Azure.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GCP", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GCP == nil {
				m.GCP = &GCPPlatformStatus{}
			}
			if err := m.GCP.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BareMetal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.BareMetal == nil {
				m.BareMetal = &BareMetalPlatformStatus{}
			}
			if err := m.BareMetal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpenStack", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OpenStack == nil {
				m.OpenStack = &OpenStackPlatformStatus{}
			}
			if err := m.OpenStack.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ovirt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Ovirt == nil {
				m.Ovirt = &OvirtPlatformStatus{}
			}
			if err := m.Ovirt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VSphere", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VSphere == nil {
				m.VSphere = &VSpherePlatformStatus{}
			}
			if err := m.VSphere.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IBMCloud", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.IBMCloud == nil {
				m.IBMCloud = &IBMCloudPlatformStatus{}
			}
			if err := m.IBMCloud.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Kubevirt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Kubevirt == nil {
				m.Kubevirt = &KubevirtPlatformStatus{}
			}
			if err := m.Kubevirt.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EquinixMetal", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.EquinixMetal == nil {
				m.EquinixMetal = &EquinixMetalPlatformStatus{}
			}
			if err := m.EquinixMetal.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PowerVS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PowerVS == nil {
				m.PowerVS = &PowerVSPlatformStatus{}
			}
			if err := m.PowerVS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AlibabaCloud", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AlibabaCloud == nil {
				m.AlibabaCloud = &AlibabaCloudPlatformStatus{}
			}
			if err := m.AlibabaCloud.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PowerVSPlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PowerVSPlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PowerVSPlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PowerVSPlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PowerVSPlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PowerVSPlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Region", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Region = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Zone", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Zone = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceEndpoints", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceEndpoints = append(m.ServiceEndpoints, PowerVSServiceEndpoint{})
			if err := m.ServiceEndpoints[len(m.ServiceEndpoints)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CISInstanceCRN", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CISInstanceCRN = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PowerVSServiceEndpoint) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PowerVSServiceEndpoint: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PowerVSServiceEndpoint: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProxyStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProxyStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProxyStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HTTPProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HTTPProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HTTPSProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HTTPSProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoProxy", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NoProxy = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLSProfileSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TLSProfileSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TLSProfileSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ciphers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ciphers = append(m.Ciphers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinTLSVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MinTLSVersion = github_com_openshift_api_config_v1.TLSProtocolVersion(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TLSSecurityProfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TLSSecurityProfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TLSSecurityProfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = github_com_openshift_api_config_v1.TLSProfileType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Old", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Old == nil {
				m.Old = &OldTLSProfile{}
			}
			if err := m.Old.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Intermediate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Intermediate == nil {
				m.Intermediate = &IntermediateTLSProfile{}
			}
			if err := m.Intermediate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Modern", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Modern == nil {
				m.Modern = &ModernTLSProfile{}
			}
			if err := m.Modern.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Custom", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Custom == nil {
				m.Custom = &CustomTLSProfile{}
			}
			if err := m.Custom.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VSpherePlatformSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VSpherePlatformSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VSpherePlatformSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VSpherePlatformStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VSpherePlatformStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VSpherePlatformStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field APIServerInternalIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.APIServerInternalIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IngressIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IngressIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeDNSIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeDNSIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfigCondition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfigCondition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfigCondition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = ContainerRuntimeConfigStatusConditionType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = k8s_io_api_core_v1.ConditionStatus(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfigList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfigList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfigList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, ContainerRuntimeConfig{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfigSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfigSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfigSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineConfigPoolSelector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MachineConfigPoolSelector == nil {
				m.MachineConfigPoolSelector = &v1.LabelSelector{}
			}
			if err := m.MachineConfigPoolSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainerRuntimeConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContainerRuntimeConfig == nil {
				m.ContainerRuntimeConfig = &ContainerRuntimeConfiguration{}
			}
			if err := m.ContainerRuntimeConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfigStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfigStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfigStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservedGeneration", wireType)
			}
			m.ObservedGeneration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObservedGeneration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Conditions = append(m.Conditions, ContainerRuntimeConfigCondition{})
			if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContainerRuntimeConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContainerRuntimeConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContainerRuntimeConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PidsLimit", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PidsLimit = &v
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LogLevel = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogSizeMax", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LogSizeMax.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OverlaySize", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.OverlaySize.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControllerConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControllerConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControllerConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControllerConfigList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControllerConfigList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControllerConfigList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, ControllerConfig{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControllerConfigSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControllerConfigSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControllerConfigSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClusterDNSIP", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ClusterDNSIP = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudProviderConfig", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudProviderConfig = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Platform", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Platform = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EtcdDiscoveryDomain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EtcdDiscoveryDomain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KubeAPIServerServingCAData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KubeAPIServerServingCAData = append(m.KubeAPIServerServingCAData[:0], dAtA[iNdEx:postIndex]...)
			if m.KubeAPIServerServingCAData == nil {
				m.KubeAPIServerServingCAData = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootCAData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootCAData = append(m.RootCAData[:0], dAtA[iNdEx:postIndex]...)
			if m.RootCAData == nil {
				m.RootCAData = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CloudProviderCAData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CloudProviderCAData = append(m.CloudProviderCAData[:0], dAtA[iNdEx:postIndex]...)
			if m.CloudProviderCAData == nil {
				m.CloudProviderCAData = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdditionalTrustBundle", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AdditionalTrustBundle = append(m.AdditionalTrustBundle[:0], dAtA[iNdEx:postIndex]...)
			if m.AdditionalTrustBundle == nil {
				m.AdditionalTrustBundle = []byte{}
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullSecret", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PullSecret == nil {
				m.PullSecret = &v11.ObjectReference{}
			}
			if err := m.PullSecret.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Images", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Images == nil {
				m.Images = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowGenerated
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGenerated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthGenerated
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthGenerated
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowGenerated
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthGenerated
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthGenerated
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipGenerated(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthGenerated
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Images[mapkey] = mapvalue
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OSImageURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OSImageURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReleaseImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReleaseImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proxy == nil {
				m.Proxy = &ProxyStatus{}
			}
			if err := m.Proxy.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Infra", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Infra == nil {
				m.Infra = &Infrastructure{}
			}
			if err := m.Infra.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DNS", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DNS == nil {
				m.DNS = &DNS{}
			}
			if err := m.DNS.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IPFamilies", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IPFamilies = IPFamiliesType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NetworkType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NetworkType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControllerConfigStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControllerConfigStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControllerConfigStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservedGeneration", wireType)
			}
			m.ObservedGeneration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObservedGeneration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Conditions = append(m.Conditions, ControllerConfigStatusCondition{})
			if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ControllerConfigStatusCondition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ControllerConfigStatusCondition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ControllerConfigStatusCondition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = ControllerConfigStatusConditionType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = k8s_io_api_core_v1.ConditionStatus(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubeletConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubeletConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubeletConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubeletConfigCondition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubeletConfigCondition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubeletConfigCondition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = KubeletConfigStatusConditionType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = k8s_io_api_core_v1.ConditionStatus(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubeletConfigList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubeletConfigList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubeletConfigList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, KubeletConfig{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubeletConfigSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubeletConfigSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubeletConfigSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AutoSizingReserved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.AutoSizingReserved = &b
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LogLevel", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LogLevel = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineConfigPoolSelector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MachineConfigPoolSelector == nil {
				m.MachineConfigPoolSelector = &v1.LabelSelector{}
			}
			if err := m.MachineConfigPoolSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KubeletConfig", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.KubeletConfig == nil {
				m.KubeletConfig = &runtime.RawExtension{}
			}
			if err := m.KubeletConfig.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TLSSecurityProfile", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TLSSecurityProfile == nil {
				m.TLSSecurityProfile = &TLSSecurityProfile{}
			}
			if err := m.TLSSecurityProfile.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *KubeletConfigStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: KubeletConfigStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: KubeletConfigStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservedGeneration", wireType)
			}
			m.ObservedGeneration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObservedGeneration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Conditions = append(m.Conditions, KubeletConfigCondition{})
			if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, MachineConfig{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPool) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPool: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPool: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Spec", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Spec.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPoolCondition) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPoolCondition: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPoolCondition: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = MachineConfigPoolConditionType(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = k8s_io_api_core_v1.ConditionStatus(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTransitionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.LastTransitionTime.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPoolList) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPoolList: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPoolList: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListMeta", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ListMeta.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, MachineConfigPool{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPoolSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPoolSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPoolSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineConfigSelector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MachineConfigSelector == nil {
				m.MachineConfigSelector = &v1.LabelSelector{}
			}
			if err := m.MachineConfigSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeSelector", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NodeSelector == nil {
				m.NodeSelector = &v1.LabelSelector{}
			}
			if err := m.NodeSelector.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Paused", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Paused = bool(v != 0)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxUnavailable", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.MaxUnavailable == nil {
				m.MaxUnavailable = &intstr.IntOrString{}
			}
			if err := m.MaxUnavailable.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Configuration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPoolStatus) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPoolStatus: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPoolStatus: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObservedGeneration", wireType)
			}
			m.ObservedGeneration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ObservedGeneration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Configuration", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Configuration.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MachineCount", wireType)
			}
			m.MachineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MachineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedMachineCount", wireType)
			}
			m.UpdatedMachineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedMachineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReadyMachineCount", wireType)
			}
			m.ReadyMachineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReadyMachineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnavailableMachineCount", wireType)
			}
			m.UnavailableMachineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UnavailableMachineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegradedMachineCount", wireType)
			}
			m.DegradedMachineCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DegradedMachineCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conditions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Conditions = append(m.Conditions, MachineConfigPoolCondition{})
			if err := m.Conditions[len(m.Conditions)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigPoolStatusConfiguration) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigPoolStatusConfiguration: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigPoolStatusConfiguration: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ObjectReference", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.ObjectReference.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Source", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Source = append(m.Source, v11.ObjectReference{})
			if err := m.Source[len(m.Source)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MachineConfigSpec) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MachineConfigSpec: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MachineConfigSpec: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OSImageURL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OSImageURL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KernelArguments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KernelArguments = append(m.KernelArguments, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Extensions", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Extensions = append(m.Extensions, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FIPS", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FIPS = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KernelType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KernelType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenerated
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenerated
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenerated        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenerated = fmt.Errorf("proto: unexpected end of group")
)
